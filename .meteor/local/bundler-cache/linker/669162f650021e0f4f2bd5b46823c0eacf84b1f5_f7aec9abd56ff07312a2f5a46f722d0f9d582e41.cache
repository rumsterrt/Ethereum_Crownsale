[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-server'].Symbol;\nvar Map = Package['ecmascript-runtime-server'].Map;\nvar Set = Package['ecmascript-runtime-server'].Set;\n\n/* Package-scope variables */\nvar ReactMeteorData;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"react-meteor-data\":{\"react-meteor-data.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/react-meteor-data/react-meteor-data.jsx                                                        //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nmodule.watch(require(\"./createContainer.jsx\"), {                                                           // 1\n  \"default\": function (v) {                                                                                // 1\n    exports.createContainer = v;                                                                           // 1\n  }                                                                                                        // 1\n}, 1);                                                                                                     // 1\nmodule.watch(require(\"./withTracker.jsx\"), {                                                               // 1\n  \"default\": function (v) {                                                                                // 1\n    exports.withTracker = v;                                                                               // 1\n  }                                                                                                        // 1\n}, 2);                                                                                                     // 1\nmodule.watch(require(\"./ReactMeteorData.jsx\"), {                                                           // 1\n  ReactMeteorData: function (v) {                                                                          // 1\n    exports.ReactMeteorData = v;                                                                           // 1\n  }                                                                                                        // 1\n}, 3);                                                                                                     // 1\nvar checkNpmVersions = void 0;                                                                             // 1\nmodule.watch(require(\"meteor/tmeasday:check-npm-versions\"), {                                              // 1\n  checkNpmVersions: function (v) {                                                                         // 1\n    checkNpmVersions = v;                                                                                  // 1\n  }                                                                                                        // 1\n}, 0);                                                                                                     // 1\ncheckNpmVersions({                                                                                         // 3\n  react: '15.x'                                                                                            // 4\n}, 'react-meteor-data');                                                                                   // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ReactMeteorData.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/react-meteor-data/ReactMeteorData.jsx                                                          //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");                                                  //\n                                                                                                           //\nvar _extends3 = _interopRequireDefault(_extends2);                                                         //\n                                                                                                           //\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");              //\n                                                                                                           //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);                     //\n                                                                                                           //\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");                                                //\n                                                                                                           //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                                       //\n                                                                                                           //\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");                                                    //\n                                                                                                           //\nvar _typeof3 = _interopRequireDefault(_typeof2);                                                           //\n                                                                                                           //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                                    //\n                                                                                                           //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                           //\n                                                                                                           //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }          //\n                                                                                                           //\nmodule.export({                                                                                            // 1\n  ReactMeteorData: function () {                                                                           // 1\n    return ReactMeteorData;                                                                                // 1\n  },                                                                                                       // 1\n  connect: function () {                                                                                   // 1\n    return connect;                                                                                        // 1\n  }                                                                                                        // 1\n});                                                                                                        // 1\nvar React = void 0;                                                                                        // 1\nmodule.watch(require(\"react\"), {                                                                           // 1\n  \"default\": function (v) {                                                                                // 1\n    React = v;                                                                                             // 1\n  }                                                                                                        // 1\n}, 0);                                                                                                     // 1\nvar Meteor = void 0;                                                                                       // 1\nmodule.watch(require(\"meteor/meteor\"), {                                                                   // 1\n  Meteor: function (v) {                                                                                   // 1\n    Meteor = v;                                                                                            // 1\n  }                                                                                                        // 1\n}, 1);                                                                                                     // 1\nvar Tracker = void 0;                                                                                      // 1\nmodule.watch(require(\"meteor/tracker\"), {                                                                  // 1\n  Tracker: function (v) {                                                                                  // 1\n    Tracker = v;                                                                                           // 1\n  }                                                                                                        // 1\n}, 2);                                                                                                     // 1\n                                                                                                           //\n// A class to keep the state and utility methods needed to manage                                          // 8\n// the Meteor data for a component.                                                                        // 9\nvar MeteorDataManager = function () {                                                                      //\n  function MeteorDataManager(component) {                                                                  // 11\n    (0, _classCallCheck3.default)(this, MeteorDataManager);                                                // 11\n    this.component = component;                                                                            // 12\n    this.computation = null;                                                                               // 13\n    this.oldData = null;                                                                                   // 14\n  }                                                                                                        // 15\n                                                                                                           //\n  MeteorDataManager.prototype.dispose = function () {                                                      //\n    function dispose() {                                                                                   //\n      if (this.computation) {                                                                              // 18\n        this.computation.stop();                                                                           // 19\n        this.computation = null;                                                                           // 20\n      }                                                                                                    // 21\n    }                                                                                                      // 22\n                                                                                                           //\n    return dispose;                                                                                        //\n  }();                                                                                                     //\n                                                                                                           //\n  MeteorDataManager.prototype.calculateData = function () {                                                //\n    function calculateData() {                                                                             //\n      var component = this.component;                                                                      // 25\n                                                                                                           //\n      if (!component.getMeteorData) {                                                                      // 27\n        return null;                                                                                       // 28\n      } // When rendering on the server, we don't want to use the Tracker.                                 // 29\n      // We only do the first rendering on the server so we can get the data right away                    // 32\n                                                                                                           //\n                                                                                                           //\n      if (Meteor.isServer) {                                                                               // 33\n        return component.getMeteorData();                                                                  // 34\n      }                                                                                                    // 35\n                                                                                                           //\n      if (this.computation) {                                                                              // 37\n        this.computation.stop();                                                                           // 38\n        this.computation = null;                                                                           // 39\n      }                                                                                                    // 40\n                                                                                                           //\n      var data = void 0; // Use Tracker.nonreactive in case we are inside a Tracker Computation.           // 42\n      // This can happen if someone calls `ReactDOM.render` inside a Computation.                          // 44\n      // In that case, we want to opt out of the normal behavior of nested                                 // 45\n      // Computations, where if the outer one is invalidated or stopped,                                   // 46\n      // it stops the inner one.                                                                           // 47\n                                                                                                           //\n      this.computation = Tracker.nonreactive(function () {                                                 // 48\n        return Tracker.autorun(function (c) {                                                              // 48\n          if (c.firstRun) {                                                                                // 50\n            var savedSetState = component.setState;                                                        // 51\n                                                                                                           //\n            try {                                                                                          // 52\n              component.setState = function () {                                                           // 53\n                throw new Error('Can\\'t call `setState` inside `getMeteorData` as this could ' + 'cause an endless loop. To respond to Meteor data changing, ' + 'consider making this component a \\\"wrapper component\\\" that ' + 'only fetches data and passes it in as props to a child ' + 'component. Then you can use `componentWillReceiveProps` in ' + 'that child component.');\n              };                                                                                           // 61\n                                                                                                           //\n              data = component.getMeteorData();                                                            // 63\n            } finally {                                                                                    // 64\n              component.setState = savedSetState;                                                          // 65\n            }                                                                                              // 66\n          } else {                                                                                         // 67\n            // Stop this computation instead of using the re-run.                                          // 68\n            // We use a brand-new autorun for each call to getMeteorData                                   // 69\n            // to capture dependencies on any reactive data sources that                                   // 70\n            // are accessed.  The reason we can't use a single autorun                                     // 71\n            // for the lifetime of the component is that Tracker only                                      // 72\n            // re-runs autoruns at flush time, while we need to be able to                                 // 73\n            // re-call getMeteorData synchronously whenever we want, e.g.                                  // 74\n            // from componentWillUpdate.                                                                   // 75\n            c.stop(); // Calling forceUpdate() triggers componentWillUpdate which                          // 76\n            // recalculates getMeteorData() and re-renders the component.                                  // 78\n                                                                                                           //\n            component.forceUpdate();                                                                       // 79\n          }                                                                                                // 80\n        });                                                                                                // 81\n      });                                                                                                  // 48\n                                                                                                           //\n      if (Package.mongo && Package.mongo.Mongo) {                                                          // 84\n        Object.keys(data).forEach(function (key) {                                                         // 85\n          if (data[key] instanceof Package.mongo.Mongo.Cursor) {                                           // 86\n            console.warn('Warning: you are returning a Mongo cursor from getMeteorData. ' + 'This value will not be reactive. You probably want to call ' + '`.fetch()` on the cursor before returning it.');\n          }                                                                                                // 92\n        });                                                                                                // 93\n      }                                                                                                    // 94\n                                                                                                           //\n      return data;                                                                                         // 96\n    }                                                                                                      // 97\n                                                                                                           //\n    return calculateData;                                                                                  //\n  }();                                                                                                     //\n                                                                                                           //\n  MeteorDataManager.prototype.updateData = function () {                                                   //\n    function updateData(newData) {                                                                         //\n      var component = this.component;                                                                      // 100\n      var oldData = this.oldData;                                                                          // 101\n                                                                                                           //\n      if (!(newData && (typeof newData === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(newData)) === 'object')) {\n        throw new Error('Expected object returned from getMeteorData');                                    // 104\n      } // update componentData in place based on newData                                                  // 105\n                                                                                                           //\n                                                                                                           //\n      for (var key in meteorBabelHelpers.sanitizeForInObject(newData)) {                                   // 107\n        component.data[key] = newData[key];                                                                // 108\n      } // if there is oldData (which is every time this method is called                                  // 109\n      // except the first), delete keys in newData that aren't in                                          // 111\n      // oldData.  don't interfere with other keys, in case we are                                         // 112\n      // co-existing with something else that writes to a component's                                      // 113\n      // this.data.                                                                                        // 114\n                                                                                                           //\n                                                                                                           //\n      if (oldData) {                                                                                       // 115\n        for (var _key in meteorBabelHelpers.sanitizeForInObject(oldData)) {                                // 116\n          if (!(_key in newData)) {                                                                        // 117\n            delete component.data[_key];                                                                   // 118\n          }                                                                                                // 119\n        }                                                                                                  // 120\n      }                                                                                                    // 121\n                                                                                                           //\n      this.oldData = newData;                                                                              // 122\n    }                                                                                                      // 123\n                                                                                                           //\n    return updateData;                                                                                     //\n  }();                                                                                                     //\n                                                                                                           //\n  return MeteorDataManager;                                                                                //\n}();                                                                                                       //\n                                                                                                           //\nvar ReactMeteorData = {                                                                                    // 126\n  componentWillMount: function () {                                                                        // 127\n    this.data = {};                                                                                        // 128\n    this._meteorDataManager = new MeteorDataManager(this);                                                 // 129\n                                                                                                           //\n    var newData = this._meteorDataManager.calculateData();                                                 // 130\n                                                                                                           //\n    this._meteorDataManager.updateData(newData);                                                           // 131\n  },                                                                                                       // 132\n  componentWillUpdate: function (nextProps, nextState) {                                                   // 134\n    var saveProps = this.props;                                                                            // 135\n    var saveState = this.state;                                                                            // 136\n    var newData = void 0;                                                                                  // 137\n                                                                                                           //\n    try {                                                                                                  // 138\n      // Temporarily assign this.state and this.props,                                                     // 139\n      // so that they are seen by getMeteorData!                                                           // 140\n      // This is a simulation of how the proposed Observe API                                              // 141\n      // for React will work, which calls observe() after                                                  // 142\n      // componentWillUpdate and after props and state are                                                 // 143\n      // updated, but before render() is called.                                                           // 144\n      // See https://github.com/facebook/react/issues/3398.                                                // 145\n      this.props = nextProps;                                                                              // 146\n      this.state = nextState;                                                                              // 147\n      newData = this._meteorDataManager.calculateData();                                                   // 148\n    } finally {                                                                                            // 149\n      this.props = saveProps;                                                                              // 150\n      this.state = saveState;                                                                              // 151\n    }                                                                                                      // 152\n                                                                                                           //\n    this._meteorDataManager.updateData(newData);                                                           // 154\n  },                                                                                                       // 155\n  componentWillUnmount: function () {                                                                      // 157\n    this._meteorDataManager.dispose();                                                                     // 158\n  }                                                                                                        // 159\n};                                                                                                         // 126\n                                                                                                           //\nvar ReactComponent = function (_React$Component) {                                                         //\n  (0, _inherits3.default)(ReactComponent, _React$Component);                                               //\n                                                                                                           //\n  function ReactComponent() {                                                                              //\n    (0, _classCallCheck3.default)(this, ReactComponent);                                                   //\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));        //\n  }                                                                                                        //\n                                                                                                           //\n  return ReactComponent;                                                                                   //\n}(React.Component);                                                                                        //\n                                                                                                           //\nObject.assign(ReactComponent.prototype, ReactMeteorData);                                                  // 163\n                                                                                                           //\nvar ReactPureComponent = function (_React$PureComponent) {                                                 //\n  (0, _inherits3.default)(ReactPureComponent, _React$PureComponent);                                       //\n                                                                                                           //\n  function ReactPureComponent() {                                                                          //\n    (0, _classCallCheck3.default)(this, ReactPureComponent);                                               //\n    return (0, _possibleConstructorReturn3.default)(this, _React$PureComponent.apply(this, arguments));    //\n  }                                                                                                        //\n                                                                                                           //\n  return ReactPureComponent;                                                                               //\n}(React.PureComponent);                                                                                    //\n                                                                                                           //\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);                                              // 165\n                                                                                                           //\nfunction connect(_ref) {                                                                                   // 167\n  var _getMeteorData = _ref.getMeteorData,                                                                 // 167\n      _ref$pure = _ref.pure,                                                                               // 167\n      pure = _ref$pure === undefined ? true : _ref$pure;                                                   // 167\n  var BaseComponent = pure ? ReactPureComponent : ReactComponent;                                          // 168\n  return function (WrappedComponent) {                                                                     // 169\n    return function (_BaseComponent) {                                                                     // 169\n      (0, _inherits3.default)(ReactMeteorDataComponent, _BaseComponent);                                   // 169\n                                                                                                           //\n      function ReactMeteorDataComponent() {                                                                // 169\n        (0, _classCallCheck3.default)(this, ReactMeteorDataComponent);                                     // 169\n        return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));      // 169\n      }                                                                                                    // 169\n                                                                                                           //\n      ReactMeteorDataComponent.prototype.getMeteorData = function () {                                     // 169\n        function getMeteorData() {                                                                         // 169\n          return _getMeteorData(this.props);                                                               // 172\n        }                                                                                                  // 173\n                                                                                                           //\n        return getMeteorData;                                                                              // 169\n      }();                                                                                                 // 169\n                                                                                                           //\n      ReactMeteorDataComponent.prototype.render = function () {                                            // 169\n        function render() {                                                                                // 169\n          return React.createElement(WrappedComponent, (0, _extends3.default)({}, this.props, this.data));\n        }                                                                                                  // 176\n                                                                                                           //\n        return render;                                                                                     // 169\n      }();                                                                                                 // 169\n                                                                                                           //\n      return ReactMeteorDataComponent;                                                                     // 169\n    }(BaseComponent);                                                                                      // 169\n  };                                                                                                       // 169\n}                                                                                                          // 179\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createContainer.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/react-meteor-data/createContainer.jsx                                                          //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nmodule.export({                                                                                            // 1\n  \"default\": function () {                                                                                 // 1\n    return createContainer;                                                                                // 1\n  }                                                                                                        // 1\n});                                                                                                        // 1\nvar React = void 0;                                                                                        // 1\nmodule.watch(require(\"react\"), {                                                                           // 1\n  \"default\": function (v) {                                                                                // 1\n    React = v;                                                                                             // 1\n  }                                                                                                        // 1\n}, 0);                                                                                                     // 1\nvar connect = void 0;                                                                                      // 1\nmodule.watch(require(\"./ReactMeteorData.jsx\"), {                                                           // 1\n  connect: function (v) {                                                                                  // 1\n    connect = v;                                                                                           // 1\n  }                                                                                                        // 1\n}, 1);                                                                                                     // 1\n                                                                                                           //\nfunction createContainer() {                                                                               // 8\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};                    // 8\n  var Component = arguments[1];                                                                            // 8\n  var expandedOptions = options;                                                                           // 9\n                                                                                                           //\n  if (typeof options === 'function') {                                                                     // 10\n    expandedOptions = {                                                                                    // 11\n      getMeteorData: options                                                                               // 12\n    };                                                                                                     // 11\n  }                                                                                                        // 14\n                                                                                                           //\n  return connect(expandedOptions)(Component);                                                              // 16\n}                                                                                                          // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"withTracker.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/react-meteor-data/withTracker.jsx                                                              //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nvar createContainer = void 0;                                                                              // 1\nmodule.watch(require(\"./createContainer\"), {                                                               // 1\n  \"default\": function (v) {                                                                                // 1\n    createContainer = v;                                                                                   // 1\n  }                                                                                                        // 1\n}, 0);                                                                                                     // 1\n                                                                                                           //\nvar withTracker = function (fn) {                                                                          // 3\n  return function (C) {                                                                                    // 3\n    return createContainer(fn, C);                                                                         // 3\n  };                                                                                                       // 3\n};                                                                                                         // 3\n                                                                                                           //\nmodule.exportDefault(withTracker);                                                                         // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\nvar exports = require(\"./node_modules/meteor/react-meteor-data/react-meteor-data.jsx\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['react-meteor-data'] = exports, {\n  ReactMeteorData: ReactMeteorData\n});\n\n})();\n","servePath":"/packages/react-meteor-data.js","sourceMap":{"version":3,"sources":["packages/react-meteor-data/react-meteor-data.jsx","packages/react-meteor-data/ReactMeteorData.jsx","packages/react-meteor-data/createContainer.jsx","packages/react-meteor-data/withTracker.jsx"],"names":["module","watch","require","v","exports","createContainer","withTracker","ReactMeteorData","checkNpmVersions","react","export","connect","React","Meteor","Tracker","MeteorDataManager","component","computation","oldData","dispose","stop","calculateData","getMeteorData","isServer","data","nonreactive","autorun","c","firstRun","savedSetState","setState","Error","forceUpdate","Package","mongo","Mongo","Object","keys","forEach","key","Cursor","console","warn","updateData","newData","componentWillMount","_meteorDataManager","componentWillUpdate","nextProps","nextState","saveProps","props","saveState","state","componentWillUnmount","ReactComponent","Component","assign","prototype","ReactPureComponent","PureComponent","pure","BaseComponent","WrappedComponent","render","options","expandedOptions","fn","C","exportDefault"],"mappings":"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","file":"/packages/react-meteor-data.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n\ncheckNpmVersions({\n  react: '15.x',\n}, 'react-meteor-data');\n\nexport { default as createContainer } from './createContainer.jsx';\nexport { default as withTracker } from './withTracker.jsx';\nexport { ReactMeteorData } from './ReactMeteorData.jsx';\n","/* global Package */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (!component.getMeteorData) {\n      return null;\n    }\n\n    // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data;\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n    this.computation = Tracker.nonreactive(() => (\n      Tracker.autorun((c) => {\n        if (c.firstRun) {\n          const savedSetState = component.setState;\n          try {\n            component.setState = () => {\n              throw new Error(\n                'Can\\'t call `setState` inside `getMeteorData` as this could '\n                + 'cause an endless loop. To respond to Meteor data changing, '\n                + 'consider making this component a \\\"wrapper component\\\" that '\n                + 'only fetches data and passes it in as props to a child '\n                + 'component. Then you can use `componentWillReceiveProps` in '\n                + 'that child component.');\n            };\n\n            data = component.getMeteorData();\n          } finally {\n            component.setState = savedSetState;\n          }\n        } else {\n          // Stop this computation instead of using the re-run.\n          // We use a brand-new autorun for each call to getMeteorData\n          // to capture dependencies on any reactive data sources that\n          // are accessed.  The reason we can't use a single autorun\n          // for the lifetime of the component is that Tracker only\n          // re-runs autoruns at flush time, while we need to be able to\n          // re-call getMeteorData synchronously whenever we want, e.g.\n          // from componentWillUpdate.\n          c.stop();\n          // Calling forceUpdate() triggers componentWillUpdate which\n          // recalculates getMeteorData() and re-renders the component.\n          component.forceUpdate();\n        }\n      })\n    ));\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach((key) => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn(\n            'Warning: you are returning a Mongo cursor from getMeteorData. '\n            + 'This value will not be reactive. You probably want to call '\n            + '`.fetch()` on the cursor before returning it.'\n          );\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (!(newData && (typeof newData) === 'object')) {\n      throw new Error('Expected object returned from getMeteorData');\n    }\n    // update componentData in place based on newData\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    }\n    // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n    this.oldData = newData;\n  }\n}\n\nexport const ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n    const newData = this._meteorDataManager.calculateData();\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  },\n};\n\nclass ReactComponent extends React.Component {}\nObject.assign(ReactComponent.prototype, ReactMeteorData);\nclass ReactPureComponent extends React.PureComponent {}\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\n\nexport function connect({ getMeteorData, pure = true }) {\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\n  return (WrappedComponent) => (\n    class ReactMeteorDataComponent extends BaseComponent {\n      getMeteorData() {\n        return getMeteorData(this.props);\n      }\n      render() {\n        return <WrappedComponent {...this.props} {...this.data} />;\n      }\n    }\n  );\n}\n","/**\n * Container helper using react-meteor-data.\n */\n\nimport React from 'react';\nimport { connect } from './ReactMeteorData.jsx';\n\nexport default function createContainer(options = {}, Component) {\n  let expandedOptions = options;\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options,\n    };\n  }\n\n  return connect(expandedOptions)(Component);\n}\n","import createContainer from './createContainer';\n\nconst withTracker = fn => C => createContainer(fn, C);\n\nexport default withTracker;\n"]}}]