[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Template = Package['templating-runtime'].Template;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar BigNumber = Package['ethereum:web3'].BigNumber;\nvar Web3 = Package['ethereum:web3'].Web3;\nvar EthTools = Package['ethereum:tools'].EthTools;\nvar LocalStore = Package['frozeman:storage'].LocalStore;\nvar TemplateVar = Package['frozeman:template-var'].TemplateVar;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar EthElements, data, i;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/ethelements.js                                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Packages                                                                                                     // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n                                                                                                                     // 7\n/**                                                                                                                  // 8\nHelper elements for ethereum dapps                                                                                   // 9\n                                                                                                                     // 10\n@class [packages] ethereum:elements                                                                                  // 11\n@constructor                                                                                                         // 12\n*/                                                                                                                   // 13\n                                                                                                                     // 14\nEthElements = {                                                                                                      // 15\n    'Modal': {                                                                                                       // 16\n        _current: new ReactiveVar(),                                                                                 // 17\n        /**                                                                                                          // 18\n        Shows the modal template                                                                                     // 19\n                                                                                                                     // 20\n        @method show                                                                                                 // 21\n        @param {String|Object} template the template name or an object with `{template: 'name', data: {data: 'context'}}`\n        @param {Object} options the options for the modal like `{closeable: true, closePath: '/dashboard'}`          // 23\n        */                                                                                                           // 24\n        'show': function(template, options) {                                                                        // 25\n            options = options || {};                                                                                 // 26\n                                                                                                                     // 27\n            if(_.isObject(template)) {                                                                               // 28\n                options = _.extend(options, template);                                                               // 29\n                this._current.set(options);                                                                          // 30\n            } else if(_.isString(template)) {                                                                        // 31\n                options.template = template;                                                                         // 32\n                this._current.set(options);                                                                          // 33\n            }                                                                                                        // 34\n        },                                                                                                           // 35\n        /**                                                                                                          // 36\n        Hide the modal template                                                                                      // 37\n                                                                                                                     // 38\n        @method hide                                                                                                 // 39\n        */                                                                                                           // 40\n        'hide': function(){                                                                                          // 41\n            this._current.set(false);                                                                                // 42\n        },                                                                                                           // 43\n        /**                                                                                                          // 44\n        Show the question modal                                                                                      // 45\n                                                                                                                     // 46\n        @method question.show                                                                                        // 47\n        @param {Object} data the data for the modal question template                                                // 48\n        @param {Object} options the options for the modal like `{closeable: true, closePath: '/dahsboard'}`          // 49\n        */                                                                                                           // 50\n        'question': function(data, options){                                                                         // 51\n            EthElements.Modal.show({                                                                                 // 52\n                template: 'dapp_modal_question',                                                                     // 53\n                data: data                                                                                           // 54\n            }, options);                                                                                             // 55\n        }                                                                                                            // 56\n    }                                                                                                                // 57\n};                                                                                                                   // 58\n                                                                                                                     // 59\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.identicon.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_identicon\");                                                                              // 2\nTemplate[\"dapp_identicon\"] = new Template(\"Template.dapp_identicon\", (function() {                                   // 3\n  var view = this;                                                                                                   // 4\n  return Blaze.If(function() {                                                                                       // 5\n    return Spacebars.call(view.lookup(\"identity\"));                                                                  // 6\n  }, function() {                                                                                                    // 7\n    return [ \"\\n        \", Blaze.If(function() {                                                                     // 8\n      return Spacebars.call(view.lookup(\"link\"));                                                                    // 9\n    }, function() {                                                                                                  // 10\n      return [ \"\\n            \", HTML.A({                                                                            // 11\n        href: function() {                                                                                           // 12\n          return Spacebars.mustache(view.lookup(\"link\"));                                                            // 13\n        },                                                                                                           // 14\n        class: function() {                                                                                          // 15\n          return [ \"dapp-identicon \", Spacebars.mustache(view.lookup(\"class\")) ];                                    // 16\n        },                                                                                                           // 17\n        style: function() {                                                                                          // 18\n          return [ \"background-image: url('\", Spacebars.mustache(view.lookup(\"identiconData\"), view.lookup(\"identity\")), \"')\" ];\n        },                                                                                                           // 20\n        title: function() {                                                                                          // 21\n          return Spacebars.mustache(view.lookup(\"i18nTextIcon\"));                                                    // 22\n        }                                                                                                            // 23\n      }), \"\\n        \" ];                                                                                            // 24\n    }, function() {                                                                                                  // 25\n      return [ \"\\n            \", HTML.SPAN({                                                                         // 26\n        class: function() {                                                                                          // 27\n          return [ \"dapp-identicon \", Spacebars.mustache(view.lookup(\"class\")) ];                                    // 28\n        },                                                                                                           // 29\n        style: function() {                                                                                          // 30\n          return [ \"background-image: url('\", Spacebars.mustache(view.lookup(\"identiconData\"), view.lookup(\"identity\")), \"')\" ];\n        },                                                                                                           // 32\n        title: function() {                                                                                          // 33\n          return Spacebars.mustache(view.lookup(\"i18nTextIcon\"));                                                    // 34\n        }                                                                                                            // 35\n      }), \"\\n        \" ];                                                                                            // 36\n    }), \"\\n    \" ];                                                                                                  // 37\n  });                                                                                                                // 38\n}));                                                                                                                 // 39\n                                                                                                                     // 40\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/identicon.js                                                                           //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Templates                                                                                                    // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n/**                                                                                                                  // 7\nReturn the user identity icon                                                                                        // 8\n                                                                                                                     // 9\n@class [template] dapp_identicon                                                                                     // 10\n@constructor                                                                                                         // 11\n*/                                                                                                                   // 12\n                                                                                                                     // 13\n/**                                                                                                                  // 14\nThe cached identicons                                                                                                // 15\n                                                                                                                     // 16\n@property cache                                                                                                      // 17\n*/                                                                                                                   // 18\nvar cache = {};                                                                                                      // 19\n                                                                                                                     // 20\nTemplate['dapp_identicon'].helpers({                                                                                 // 21\n    /**                                                                                                              // 22\n    Make sure the identity is lowercased                                                                             // 23\n                                                                                                                     // 24\n    @method (identity)                                                                                               // 25\n    */                                                                                                               // 26\n    'identity': function(identity){                                                                                  // 27\n        return (_.isString(this.identity)) ? this.identity.toLowerCase() : this.identity;                            // 28\n    },                                                                                                               // 29\n    /**                                                                                                              // 30\n    Return the cached or generated identicon                                                                         // 31\n                                                                                                                     // 32\n    @method (identiconData)                                                                                          // 33\n    */                                                                                                               // 34\n    'identiconData': function(identity){                                                                             // 35\n                                                                                                                     // 36\n        // remove items if the cache is larger than 50 entries                                                       // 37\n        if(_.size(cache) > 50) {                                                                                     // 38\n            delete cache[Object.keys(cache)[0]];                                                                     // 39\n        }                                                                                                            // 40\n                                                                                                                     // 41\n        return cache['ID_'+ identity] || (cache['ID_'+ identity] =  blockies.create({                                // 42\n            seed: identity,                                                                                          // 43\n            size: 8,                                                                                                 // 44\n            scale: 8                                                                                                 // 45\n        }).toDataURL());                                                                                             // 46\n    },                                                                                                               // 47\n    /**                                                                                                              // 48\n    Get the correct text, if TAPi18n is available.                                                                   // 49\n                                                                                                                     // 50\n    @method i18nText                                                                                                 // 51\n    */                                                                                                               // 52\n    'i18nTextIcon': function(){                                                                                      // 53\n        if(typeof TAPi18n === 'undefined' || TAPi18n.__('elements.identiconHelper') == 'elements.identiconHelper') {\n            return \"This is a security icon, if there's any change on the address the resulting icon should be a completelly different one\";\n        } else {                                                                                                     // 56\n            return TAPi18n.__('elements.identiconHelper');                                                           // 57\n        }                                                                                                            // 58\n    }                                                                                                                // 59\n});                                                                                                                  // 60\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.addressInput.js                                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_addressInput\");                                                                           // 2\nTemplate[\"dapp_addressInput\"] = new Template(\"Template.dapp_addressInput\", (function() {                             // 3\n  var view = this;                                                                                                   // 4\n  return HTML.DIV({                                                                                                  // 5\n    class: function() {                                                                                              // 6\n      return [ \"dapp-address-input \", Blaze.If(function() {                                                          // 7\n        return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"hasName\");                  // 8\n      }, function() {                                                                                                // 9\n        return \"has-name\";                                                                                           // 10\n      }) ];                                                                                                          // 11\n    }                                                                                                                // 12\n  }, \"\\n        \", HTML.INPUT(HTML.Attrs({                                                                           // 13\n    type: \"text\",                                                                                                    // 14\n    name: function() {                                                                                               // 15\n      return Spacebars.mustache(view.lookup(\"name\"));                                                                // 16\n    },                                                                                                               // 17\n    placeholder: function() {                                                                                        // 18\n      return Spacebars.mustache(view.lookup(\"placeholder\"));                                                         // 19\n    },                                                                                                               // 20\n    class: function() {                                                                                              // 21\n      return [ Spacebars.mustache(view.lookup(\"class\")), \" \", Blaze.Unless(function() {                              // 22\n        return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"isValid\");                  // 23\n      }, function() {                                                                                                // 24\n        return \"dapp-error\";                                                                                         // 25\n      }), \" \", Blaze.Unless(function() {                                                                             // 26\n        return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"isChecksum\");               // 27\n      }, function() {                                                                                                // 28\n        return \" dapp-non-checksum \";                                                                                // 29\n      }) ];                                                                                                          // 30\n    },                                                                                                               // 31\n    value: function() {                                                                                              // 32\n      return Spacebars.mustache(view.lookup(\"value\"));                                                               // 33\n    },                                                                                                               // 34\n    title: function() {                                                                                              // 35\n      return Blaze.Unless(function() {                                                                               // 36\n        return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"isChecksum\");               // 37\n      }, function() {                                                                                                // 38\n        return Blaze.View(\"lookup:i18nText\", function() {                                                            // 39\n          return Spacebars.mustache(view.lookup(\"i18nText\"));                                                        // 40\n        });                                                                                                          // 41\n      });                                                                                                            // 42\n    }                                                                                                                // 43\n  }, function() {                                                                                                    // 44\n    return Spacebars.attrMustache(view.lookup(\"additionalAttributes\"));                                              // 45\n  })), \"\\n\\n        \", Blaze.If(function() {                                                                         // 46\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"hasName\");                      // 47\n  }, function() {                                                                                                    // 48\n    return [ \"\\n        \", HTML.SPAN({                                                                               // 49\n      class: \"ens-name\"                                                                                              // 50\n    }, Blaze.View(\"lookup:ensDisplay\", function() {                                                                  // 51\n      return Spacebars.mustache(view.lookup(\"ensDisplay\"));                                                          // 52\n    })), \"\\n        \" ];                                                                                             // 53\n  }), \"\\n\\n        \", Blaze.If(function() {                                                                          // 54\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"isValid\");                      // 55\n  }, function() {                                                                                                    // 56\n    return [ \"\\n            \", Blaze._TemplateWith(function() {                                                      // 57\n      return {                                                                                                       // 58\n        identity: Spacebars.call(view.lookup(\"address\")),                                                            // 59\n        class: Spacebars.call(\"dapp-small\")                                                                          // 60\n      };                                                                                                             // 61\n    }, function() {                                                                                                  // 62\n      return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));                                               // 63\n    }), \"\\n        \" ];                                                                                              // 64\n  }, function() {                                                                                                    // 65\n    return [ \"\\n            \", HTML.I({                                                                              // 66\n      class: \"icon-shield\"                                                                                           // 67\n    }), \"\\n        \" ];                                                                                              // 68\n  }), \"\\n\\n    \");                                                                                                   // 69\n}));                                                                                                                 // 70\n                                                                                                                     // 71\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/addressInput.js                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\n/**                                                                                                                  // 2\nTemplate Controllers                                                                                                 // 3\n                                                                                                                     // 4\n@module Templates                                                                                                    // 5\n*/                                                                                                                   // 6\n                                                                                                                     // 7\nvar sha3 = function(str, opt) {                                                                                      // 8\n  return '0x' + web3.sha3(str, opt).replace('0x', '');                                                               // 9\n};                                                                                                                   // 10\n                                                                                                                     // 11\nfunction namehash(name) {                                                                                            // 12\n  var node = '0x0000000000000000000000000000000000000000000000000000000000000000';                                   // 13\n  if (name != '') {                                                                                                  // 14\n    var labels = name.split('.');                                                                                    // 15\n    for (var i = labels.length - 1; i >= 0; i--) {                                                                   // 16\n      node = sha3(node + sha3(labels[i]).slice(2), {encoding: 'hex'});                                               // 17\n    }                                                                                                                // 18\n  }                                                                                                                  // 19\n  return node.toString();                                                                                            // 20\n}                                                                                                                    // 21\n                                                                                                                     // 22\nvar ensContractAbi = [{'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'resolver', 'outputs': [{'name': '', 'type': 'address'}], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'owner', 'outputs': [{'name': '', 'type': 'address'}], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'label', 'type': 'bytes32'}, {'name': 'owner', 'type': 'address'}], 'name': 'setSubnodeOwner', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'ttl', 'type': 'uint64'}], 'name': 'setTTL', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'ttl', 'outputs': [{'name': '', 'type': 'uint64'}], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'resolver', 'type': 'address'}], 'name': 'setResolver', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'owner', 'type': 'address'}], 'name': 'setOwner', 'outputs': [], 'payable': false, 'type': 'function'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'owner', 'type': 'address'}], 'name': 'Transfer', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': true, 'name': 'label', 'type': 'bytes32'}, {'indexed': false, 'name': 'owner', 'type': 'address'}], 'name': 'NewOwner', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'resolver', 'type': 'address'}], 'name': 'NewResolver', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'ttl', 'type': 'uint64'}], 'name': 'NewTTL', 'type': 'event'}];\n                                                                                                                     // 24\nvar resolverContractAbi = [{'constant': true, 'inputs': [{'name': 'interfaceID', 'type': 'bytes4'}], 'name': 'supportsInterface', 'outputs': [{'name': '', 'type': 'bool'}], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'contentTypes', 'type': 'uint256'}], 'name': 'ABI', 'outputs': [{'name': 'contentType', 'type': 'uint256'}, {'name': 'data', 'type': 'bytes'}], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'x', 'type': 'bytes32'}, {'name': 'y', 'type': 'bytes32'}], 'name': 'setPubkey', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'content', 'outputs': [{'name': 'ret', 'type': 'bytes32'}], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'addr', 'outputs': [{'name': 'ret', 'type': 'address'}], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'contentType', 'type': 'uint256'}, {'name': 'data', 'type': 'bytes'}], 'name': 'setABI', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'name', 'outputs': [{'name': 'ret', 'type': 'string'}], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'name', 'type': 'string'}], 'name': 'setName', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'hash', 'type': 'bytes32'}], 'name': 'setContent', 'outputs': [], 'payable': false, 'type': 'function'}, {'constant': true, 'inputs': [{'name': 'node', 'type': 'bytes32'}], 'name': 'pubkey', 'outputs': [{'name': 'x', 'type': 'bytes32'}, {'name': 'y', 'type': 'bytes32'}], 'payable': false, 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'node', 'type': 'bytes32'}, {'name': 'addr', 'type': 'address'}], 'name': 'setAddr', 'outputs': [], 'payable': false, 'type': 'function'}, {'inputs': [{'name': 'ensAddr', 'type': 'address'}], 'payable': false, 'type': 'constructor'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'a', 'type': 'address'}], 'name': 'AddrChanged', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'hash', 'type': 'bytes32'}], 'name': 'ContentChanged', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'name', 'type': 'string'}], 'name': 'NameChanged', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': true, 'name': 'contentType', 'type': 'uint256'}], 'name': 'ABIChanged', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': true, 'name': 'node', 'type': 'bytes32'}, {'indexed': false, 'name': 'x', 'type': 'bytes32'}, {'indexed': false, 'name': 'y', 'type': 'bytes32'}], 'name': 'PubkeyChanged', 'type': 'event'}];\n                                                                                                                     // 26\nvar ensAddress = '0x314159265dd8dbb310642f98f50c066173c1259b';                                                       // 27\n                                                                                                                     // 28\nfunction getAddr(name, ens, callback) {                                                                              // 29\n  var resolverContract = web3.eth.contract(resolverContractAbi);                                                     // 30\n                                                                                                                     // 31\n  var node = namehash(name);                                                                                         // 32\n  // get a resolver address for that name                                                                            // 33\n  ens.resolver(node, function(err, resolverAddress) {                                                                // 34\n    if (!err && resolverAddress != 0) {                                                                              // 35\n      // if you find one, find the addr of that resolver                                                             // 36\n      resolverContract.at(resolverAddress).addr(node, function(error, result) {                                      // 37\n        if (!err && result != 0 && callback) {                                                                       // 38\n          callback(result);                                                                                          // 39\n        }                                                                                                            // 40\n      });                                                                                                            // 41\n    }                                                                                                                // 42\n  });                                                                                                                // 43\n}                                                                                                                    // 44\n                                                                                                                     // 45\nfunction getName(address, ens, callback) {                                                                           // 46\n  var resolverContract = web3.eth.contract(resolverContractAbi);                                                     // 47\n                                                                                                                     // 48\n  var node = namehash(address.toLowerCase().replace('0x', '') + '.addr.reverse');                                    // 49\n  // get a resolver address for that name                                                                            // 50\n  ens.resolver(node, function(err, resolverAddress) {                                                                // 51\n    if (!err && resolverAddress != 0) {                                                                              // 52\n      // if you find one, find the name on that resolver                                                             // 53\n      resolverContract.at(resolverAddress).name(node, function(error, result) {                                      // 54\n        if (!err && result != 0 && callback) {                                                                       // 55\n          callback(result);                                                                                          // 56\n        }                                                                                                            // 57\n      });                                                                                                            // 58\n    }                                                                                                                // 59\n  });                                                                                                                // 60\n}                                                                                                                    // 61\n                                                                                                                     // 62\n/**                                                                                                                  // 63\nThe address input template, containg the identicon.                                                                  // 64\n                                                                                                                     // 65\n@class [template] dapp_addressInput                                                                                  // 66\n@constructor                                                                                                         // 67\n*/                                                                                                                   // 68\n                                                                                                                     // 69\nTemplate.dapp_addressInput.onCreated(function() {                                                                    // 70\n  var template = this;                                                                                               // 71\n                                                                                                                     // 72\n  // default set to true, to show no error                                                                           // 73\n  TemplateVar.set('isValid', true);                                                                                  // 74\n  TemplateVar.set('isChecksum', true);                                                                               // 75\n                                                                                                                     // 76\n  if (this.data && this.data.value) {                                                                                // 77\n    TemplateVar.set('value', this.data.value);                                                                       // 78\n  }                                                                                                                  // 79\n                                                                                                                     // 80\n  var ensContract = web3.eth.contract(ensContractAbi);                                                               // 81\n  ensContract.at(ensAddress, function(err, ens) {                                                                    // 82\n    TemplateVar.set(template, 'ensContract', ens);                                                                   // 83\n  });                                                                                                                // 84\n                                                                                                                     // 85\n  TemplateVar.set(template, 'ensAvailable', true);                                                                   // 86\n                                                                                                                     // 87\n  web3.eth.getSyncing(function(err, syncing) {                                                                       // 88\n    if (!err && !syncing) {                                                                                          // 89\n      // cannot use ENS while syncing                                                                                // 90\n      web3.eth.getCode(ensAddress, function(err, code) {                                                             // 91\n        if (!err && code.length > 2) {                                                                               // 92\n          // check if there's code on the address                                                                    // 93\n          TemplateVar.set(template, 'ensAvailable', true);                                                           // 94\n        }                                                                                                            // 95\n      });                                                                                                            // 96\n    }                                                                                                                // 97\n  });                                                                                                                // 98\n});                                                                                                                  // 99\n                                                                                                                     // 100\nTemplate.dapp_addressInput.onRendered(function() {                                                                   // 101\n  if (this.data) {                                                                                                   // 102\n    this.$('input').trigger('change');                                                                               // 103\n  }                                                                                                                  // 104\n});                                                                                                                  // 105\n                                                                                                                     // 106\nTemplate.dapp_addressInput.helpers({                                                                                 // 107\n  /**                                                                                                                // 108\n    Return the to address                                                                                            // 109\n                                                                                                                     // 110\n    @method (address)                                                                                                // 111\n    */                                                                                                               // 112\n  'address': function() {                                                                                            // 113\n    var address = TemplateVar.get('value');                                                                          // 114\n                                                                                                                     // 115\n    // if(Template.instance().view.isRendered && Template.instance().find('input').value !== address)                // 116\n    // Template.instance().$('input').trigger('change');                                                             // 117\n                                                                                                                     // 118\n    return (_.isString(address) && web3.isAddress(address)) ? '0x' + address.replace('0x', '') : false;              // 119\n  },                                                                                                                 // 120\n  /**                                                                                                                // 121\n    Return the autofocus or disabled attribute.                                                                      // 122\n                                                                                                                     // 123\n    @method (additionalAttributes)                                                                                   // 124\n    */                                                                                                               // 125\n  'additionalAttributes': function() {                                                                               // 126\n    var attr = {};                                                                                                   // 127\n                                                                                                                     // 128\n    if (this.autofocus) {attr.autofocus = true;}                                                                     // 129\n    if (this.disabled) {attr.disabled = true;}                                                                       // 130\n                                                                                                                     // 131\n    return attr;                                                                                                     // 132\n  },                                                                                                                 // 133\n  /**                                                                                                                // 134\n    Get the correct text, if TAPi18n is available.                                                                   // 135\n                                                                                                                     // 136\n    @method i18nText                                                                                                 // 137\n    */                                                                                                               // 138\n  'i18nText': function() {                                                                                           // 139\n    if (typeof TAPi18n === 'undefined' || TAPi18n.__('elements.checksumAlert') == 'elements.checksumAlert') {        // 140\n      return \"This address looks valid, but it doesn't have some security features that will protect you against typos, so double check you have the right one. If provided, check if the security icon  matches.\";\n    }                                                                                                                // 142\n    return TAPi18n.__('elements.checksumAlert');                                                                     // 143\n  },                                                                                                                 // 144\n  'ensDisplay': function() {                                                                                         // 145\n    return TemplateVar.get('ensName').split('.').slice(0, -1).reverse().join(' ▸ ');                                 // 146\n  }                                                                                                                  // 147\n});                                                                                                                  // 148\n                                                                                                                     // 149\n                                                                                                                     // 150\nTemplate.dapp_addressInput.events({                                                                                  // 151\n  /**                                                                                                                // 152\n    Set the address while typing                                                                                     // 153\n                                                                                                                     // 154\n    @event input input, change input                                                                                 // 155\n    */                                                                                                               // 156\n  'input input, keyup input': function(e, template) {                                                                // 157\n    if (!e.currentTarget.value) return;                                                                              // 158\n                                                                                                                     // 159\n    var value = e.currentTarget.value.replace(/[\\s\\*\\(\\)\\!\\?\\#\\$\\%]+/g, '');                                         // 160\n    TemplateVar.set(template, 'hasName', false);                                                                     // 161\n                                                                                                                     // 162\n    // add 0x                                                                                                        // 163\n    if (value.length > 38                                                                                            // 164\n            && value.indexOf('0x') === -1                                                                            // 165\n            && /^[0-9a-f]+$/.test(value.toLowerCase())) {                                                            // 166\n      value = '0x' + value;                                                                                          // 167\n    }                                                                                                                // 168\n                                                                                                                     // 169\n    if (web3.isAddress(value) || _.isEmpty(value)) {                                                                 // 170\n      TemplateVar.set('isValid', true);                                                                              // 171\n                                                                                                                     // 172\n      if (!_.isEmpty(value)) {                                                                                       // 173\n        TemplateVar.set('value', '0x' + value.replace('0x', ''));                                                    // 174\n        TemplateVar.set('isChecksum', web3.isChecksumAddress(value));                                                // 175\n                                                                                                                     // 176\n        if (TemplateVar.get('ensAvailable')) {                                                                       // 177\n          var ens = TemplateVar.get('ensContract');                                                                  // 178\n                                                                                                                     // 179\n          // if an address was added, check if there's a name associated with it                                     // 180\n          getName(value, ens, function(name) {                                                                       // 181\n            // Any address can claim to be any name. Double check it!                                                // 182\n            getAddr(name, ens, function(addr) {                                                                      // 183\n              TemplateVar.set(template, 'hasName', true);                                                            // 184\n              TemplateVar.set(template, 'ensName', name);                                                            // 185\n              TemplateVar.set(template, 'isValid', true);                                                            // 186\n              TemplateVar.set(template, 'isChecksum', true);                                                         // 187\n              TemplateVar.set(template, 'value', web3.toChecksumAddress(addr));                                      // 188\n              e.currentTarget.value = web3.toChecksumAddress(addr);                                                  // 189\n            });                                                                                                      // 190\n          });                                                                                                        // 191\n        }                                                                                                            // 192\n      } else {                                                                                                       // 193\n        TemplateVar.set('value', undefined);                                                                         // 194\n        TemplateVar.set('isChecksum', true);                                                                         // 195\n      }                                                                                                              // 196\n                                                                                                                     // 197\n      e.currentTarget.value = value;                                                                                 // 198\n    } else if (TemplateVar.get('ensAvailable')) {                                                                    // 199\n      if (value.slice(-4) !== '.eth') value = value + '.eth';                                                        // 200\n                                                                                                                     // 201\n      TemplateVar.set('hasName', false);                                                                             // 202\n      TemplateVar.set('isValid', false);                                                                             // 203\n      TemplateVar.set('value', undefined);                                                                           // 204\n      var ens = TemplateVar.get('ensContract');                                                                      // 205\n                                                                                                                     // 206\n      getAddr(value, ens, function(addr) {                                                                           // 207\n        TemplateVar.set(template, 'hasName', true);                                                                  // 208\n        TemplateVar.set(template, 'isValid', true);                                                                  // 209\n        TemplateVar.set(template, 'isChecksum', true);                                                               // 210\n        TemplateVar.set(template, 'value', web3.toChecksumAddress(addr));                                            // 211\n        TemplateVar.set(template, 'ensName', value);                                                                 // 212\n        // e.currentTarget.value = web3.toChecksumAddress(addr);                                                     // 213\n        // check name                                                                                                // 214\n        getName(addr, ens, function(name) {                                                                          // 215\n          TemplateVar.set(template, 'ensName', name);                                                                // 216\n        });                                                                                                          // 217\n      });                                                                                                            // 218\n    }                                                                                                                // 219\n  },                                                                                                                 // 220\n  /**                                                                                                                // 221\n    Set the address while typing                                                                                     // 222\n                                                                                                                     // 223\n    @event input input, change input                                                                                 // 224\n    */                                                                                                               // 225\n  'focus input': function(e, template) {                                                                             // 226\n    if (TemplateVar.get('hasName')) e.currentTarget.value = TemplateVar.get('ensName');                              // 227\n  },                                                                                                                 // 228\n  /**                                                                                                                // 229\n    Set the address while typing                                                                                     // 230\n                                                                                                                     // 231\n    @event input input, change input                                                                                 // 232\n    */                                                                                                               // 233\n  'blur input': function(e, template) {                                                                              // 234\n    var value = TemplateVar.get('value');                                                                            // 235\n    if (value) e.currentTarget.value = value;                                                                        // 236\n  },                                                                                                                 // 237\n  /**                                                                                                                // 238\n    Prevent the identicon from beeing clicked.                                                                       // 239\n                                                                                                                     // 240\n    TODO: remove?                                                                                                    // 241\n                                                                                                                     // 242\n    @event click a                                                                                                   // 243\n    */                                                                                                               // 244\n  'click a, click .ens-name': function(e, template) {                                                                // 245\n    // focus on input element                                                                                        // 246\n    var inputElement = template.find('input');                                                                       // 247\n    inputElement.focus();                                                                                            // 248\n    e.preventDefault();                                                                                              // 249\n  }                                                                                                                  // 250\n});                                                                                                                  // 251\n                                                                                                                     // 252\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.dataTextarea.js                                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_dataTextarea\");                                                                           // 2\nTemplate[\"dapp_dataTextarea\"] = new Template(\"Template.dapp_dataTextarea\", (function() {                             // 3\n  var view = this;                                                                                                   // 4\n  return HTML.TEXTAREA(HTML.Attrs({                                                                                  // 5\n    name: function() {                                                                                               // 6\n      return Spacebars.mustache(view.lookup(\"name\"));                                                                // 7\n    },                                                                                                               // 8\n    class: function() {                                                                                              // 9\n      return [ \"dapp-data-textarea \", Spacebars.mustache(view.lookup(\"class\")), \" \", Blaze.Unless(function() {       // 10\n        return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"isValid\");                  // 11\n      }, function() {                                                                                                // 12\n        return \"dapp-error\";                                                                                         // 13\n      }) ];                                                                                                          // 14\n    },                                                                                                               // 15\n    cols: function() {                                                                                               // 16\n      return Spacebars.mustache(view.lookup(\"cols\"));                                                                // 17\n    },                                                                                                               // 18\n    rows: function() {                                                                                               // 19\n      return Spacebars.mustache(view.lookup(\"rows\"));                                                                // 20\n    }                                                                                                                // 21\n  }, function() {                                                                                                    // 22\n    return Spacebars.attrMustache(view.lookup(\"additionalAttributes\"));                                              // 23\n  }, {                                                                                                               // 24\n    value: function() {                                                                                              // 25\n      return Spacebars.mustache(view.lookup(\"value\"));                                                               // 26\n    }                                                                                                                // 27\n  }));                                                                                                               // 28\n}));                                                                                                                 // 29\n                                                                                                                     // 30\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/dataTextarea.js                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Templates                                                                                                    // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n/**                                                                                                                  // 7\nThe data textarea template.                                                                                          // 8\n                                                                                                                     // 9\n@class [template] dapp_dataTextarea                                                                                  // 10\n@constructor                                                                                                         // 11\n*/                                                                                                                   // 12\n                                                                                                                     // 13\nTemplate['dapp_dataTextarea'].onCreated(function(){                                                                  // 14\n                                                                                                                     // 15\n    // default set to true, to show no error                                                                         // 16\n    TemplateVar.set('isValid', true);                                                                                // 17\n                                                                                                                     // 18\n    if(this.data && this.data.value) {                                                                               // 19\n        TemplateVar.set('value', this.data.value);                                                                   // 20\n    }                                                                                                                // 21\n});                                                                                                                  // 22\n                                                                                                                     // 23\nTemplate['dapp_dataTextarea'].onRendered(function(){                                                                 // 24\n    if(this.data && this.data.value) {                                                                               // 25\n        this.$('textarea').trigger('change');                                                                        // 26\n    }                                                                                                                // 27\n});                                                                                                                  // 28\n                                                                                                                     // 29\nTemplate['dapp_dataTextarea'].helpers({                                                                              // 30\n    /**                                                                                                              // 31\n    Return the autofocus or disabled attribute.                                                                      // 32\n                                                                                                                     // 33\n    @method (additionalAttributes)                                                                                   // 34\n    */                                                                                                               // 35\n    'additionalAttributes': function(){                                                                              // 36\n        var attr = {};                                                                                               // 37\n                                                                                                                     // 38\n        if(this.autofocus)                                                                                           // 39\n            attr.autofocus = true;                                                                                   // 40\n        if(this.disabled)                                                                                            // 41\n            attr.disabled = true;                                                                                    // 42\n                                                                                                                     // 43\n        return attr;                                                                                                 // 44\n    }                                                                                                                // 45\n});                                                                                                                  // 46\n                                                                                                                     // 47\n                                                                                                                     // 48\nTemplate['dapp_dataTextarea'].events({                                                                               // 49\n    /**                                                                                                              // 50\n    Set the value while typing                                                                                       // 51\n                                                                                                                     // 52\n    @event input textarea, change textarea                                                                           // 53\n    */                                                                                                               // 54\n    'input textarea, change textarea': function(e, template){                                                        // 55\n        var value = e.currentTarget.value.replace(/\\s+/g, '');                                                       // 56\n                                                                                                                     // 57\n        // remove multiline                                                                                          // 58\n        if(value.indexOf(\"\\n\") !== -1) {                                                                             // 59\n            value = value.replace(\"\\n\", '');                                                                         // 60\n            e.currentTarget.value = value;                                                                           // 61\n        }                                                                                                            // 62\n                                                                                                                     // 63\n        // add 0x                                                                                                    // 64\n        if(value.length > 2 && value.indexOf('0x') === -1) {                                                         // 65\n            value = '0x'+ value;                                                                                     // 66\n            e.currentTarget.value = value;                                                                           // 67\n        }                                                                                                            // 68\n                                                                                                                     // 69\n        if(/^(0x)?[a-f0-9]*$/i.test(value) || _.isEmpty(value)) {                                                    // 70\n            TemplateVar.set('isValid', true);                                                                        // 71\n            if(!_.isEmpty(value))                                                                                    // 72\n                TemplateVar.set('value', '0x'+ value.replace('0x',''));                                              // 73\n            else                                                                                                     // 74\n                TemplateVar.set('value', undefined);                                                                 // 75\n        } else {                                                                                                     // 76\n            TemplateVar.set('isValid', false);                                                                       // 77\n            TemplateVar.set('value', undefined);                                                                     // 78\n        }                                                                                                            // 79\n    }                                                                                                                // 80\n});                                                                                                                  // 81\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.selectAccount.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_selectAccount\");                                                                          // 2\nTemplate[\"dapp_selectAccount\"] = new Template(\"Template.dapp_selectAccount\", (function() {                           // 3\n  var view = this;                                                                                                   // 4\n  return HTML.DIV({                                                                                                  // 5\n    class: function() {                                                                                              // 6\n      return [ \"dapp-select-account \", Spacebars.mustache(view.lookup(\"class\")) ];                                   // 7\n    }                                                                                                                // 8\n  }, \"\\n        \", HTML.SELECT({                                                                                     // 9\n    name: function() {                                                                                               // 10\n      return Blaze.If(function() {                                                                                   // 11\n        return Spacebars.call(view.lookup(\"name\"));                                                                  // 12\n      }, function() {                                                                                                // 13\n        return Blaze.View(\"lookup:name\", function() {                                                                // 14\n          return Spacebars.mustache(view.lookup(\"name\"));                                                            // 15\n        });                                                                                                          // 16\n      }, function() {                                                                                                // 17\n        return \"dapp-select-account\";                                                                                // 18\n      });                                                                                                            // 19\n    },                                                                                                               // 20\n    class: function() {                                                                                              // 21\n      return Spacebars.mustache(view.lookup(\"class\"));                                                               // 22\n    }                                                                                                                // 23\n  }, \"\\n            \", Blaze.Each(function() {                                                                       // 24\n    return Spacebars.call(view.lookup(\"accounts\"));                                                                  // 25\n  }, function() {                                                                                                    // 26\n    return [ \"\\n                \", HTML.OPTION(HTML.Attrs({                                                          // 27\n      value: function() {                                                                                            // 28\n        return Spacebars.mustache(view.lookup(\"address\"));                                                           // 29\n      }                                                                                                              // 30\n    }, function() {                                                                                                  // 31\n      return Spacebars.attrMustache(view.lookup(\"selected\"));                                                        // 32\n    }), \"\\n                    \", Blaze.If(function() {                                                              // 33\n      return Spacebars.call(view.lookup(\"isAccount\"));                                                               // 34\n    }, function() {                                                                                                  // 35\n      return \"🔑\";                                                                                                   // 36\n    }), \" \", Blaze.View(\"lookup:name\", function() {                                                                  // 37\n      return Spacebars.mustache(view.lookup(\"name\"));                                                                // 38\n    }), \"\\n                    \", Blaze.If(function() {                                                              // 39\n      return Spacebars.call(view.lookup(\"balance\"));                                                                 // 40\n    }, function() {                                                                                                  // 41\n      return [ \"\\n                        - \", Blaze.View(\"lookup:dapp_formatBalance\", function() {                  // 42\n        return Spacebars.mustache(view.lookup(\"dapp_formatBalance\"), view.lookup(\"balance\"), \"0,0.00 UNIT\");         // 43\n      }), \"\\n                        \", Blaze.If(function() {                                                        // 44\n        return Spacebars.call(view.lookup(\"isNotEtherUnit\"));                                                        // 45\n      }, function() {                                                                                                // 46\n        return [ \"\\n                            (\", Blaze.View(\"lookup:dapp_formatBalance\", function() {             // 47\n          return Spacebars.mustache(view.lookup(\"dapp_formatBalance\"), view.lookup(\"balance\"), \"0,0.00 UNIT\", \"ether\");\n        }), \")\\n                        \" ];                                                                         // 49\n      }), \"\\n                    \" ];                                                                                // 50\n    }), \"\\n                \"), \"\\n            \" ];                                                                   // 51\n  }), \"\\n        \"), \"\\n        \", Blaze.If(function() {                                                             // 52\n    return Spacebars.call(view.lookup(\"isAddress\"));                                                                 // 53\n  }, function() {                                                                                                    // 54\n    return [ \"\\n        \", Blaze._TemplateWith(function() {                                                          // 55\n      return {                                                                                                       // 56\n        identity: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"value\")),\n        class: Spacebars.call(\"dapp-small\")                                                                          // 58\n      };                                                                                                             // 59\n    }, function() {                                                                                                  // 60\n      return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));                                               // 61\n    }), \"\\n        \" ];                                                                                              // 62\n  }, function() {                                                                                                    // 63\n    return [ \"\\n        \", HTML.I({                                                                                  // 64\n      class: function() {                                                                                            // 65\n        return [ \"no-identicon icon-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"value\") ];\n      }                                                                                                              // 67\n    }), \"\\n        \" ];                                                                                              // 68\n  }), \"\\n    \");                                                                                                     // 69\n}));                                                                                                                 // 70\n                                                                                                                     // 71\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/selectAccount.js                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Templates                                                                                                    // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n/**                                                                                                                  // 7\nThe select account template                                                                                          // 8\n                                                                                                                     // 9\n@class [template] dapp_selectAccount                                                                                 // 10\n@constructor                                                                                                         // 11\n*/                                                                                                                   // 12\n                                                                                                                     // 13\nTemplate['dapp_selectAccount'].onCreated(function(){                                                                 // 14\n    if(this.data ) {                                                                                                 // 15\n        if(this.data.value) {                                                                                        // 16\n            TemplateVar.set('value', this.data.value);                                                               // 17\n        } else if(this.data.accounts && this.data.accounts[0]) {                                                     // 18\n            TemplateVar.set('value', this.data.accounts[0].address);                                                 // 19\n        }                                                                                                            // 20\n    }                                                                                                                // 21\n});                                                                                                                  // 22\n                                                                                                                     // 23\n                                                                                                                     // 24\nTemplate['dapp_selectAccount'].helpers({                                                                             // 25\n    /**                                                                                                              // 26\n    Check if its a normal account                                                                                    // 27\n                                                                                                                     // 28\n    @method (isAccount)                                                                                              // 29\n    */                                                                                                               // 30\n    'isAccount': function(){                                                                                         // 31\n        return this.type === 'account' && Template.parentData(1).showAccountTypes;                                   // 32\n    },                                                                                                               // 33\n    /**                                                                                                              // 34\n    Return the selected attribute if its selected                                                                    // 35\n                                                                                                                     // 36\n    @method (selected)                                                                                               // 37\n    */                                                                                                               // 38\n    'selected': function(){                                                                                          // 39\n        return (TemplateVar.get('value') === this.address)                                                           // 40\n            ? {selected: true}                                                                                       // 41\n            : {};                                                                                                    // 42\n    },                                                                                                               // 43\n    /**                                                                                                              // 44\n    Check if the current selected unit is not ether                                                                  // 45\n                                                                                                                     // 46\n    @method (isNotEtherUnit)                                                                                         // 47\n    */                                                                                                               // 48\n    'isNotEtherUnit': function() {                                                                                   // 49\n        return EthTools.getUnit().toLowerCase() !== 'ether';                                                         // 50\n    },                                                                                                               // 51\n    /**                                                                                                              // 52\n    Check if the current selected unit is not ether                                                                  // 53\n                                                                                                                     // 54\n    @method (isNotEtherUnit)                                                                                         // 55\n    */                                                                                                               // 56\n    'isAddress': function() {                                                                                        // 57\n        return web3.isAddress(TemplateVar.get('value'));                                                             // 58\n    }                                                                                                                // 59\n});                                                                                                                  // 60\n                                                                                                                     // 61\nTemplate['dapp_selectAccount'].events({                                                                              // 62\n    /**                                                                                                              // 63\n    Set the selected address.                                                                                        // 64\n                                                                                                                     // 65\n    @event change select                                                                                             // 66\n    */                                                                                                               // 67\n    'change select': function(e){                                                                                    // 68\n        TemplateVar.set('value', e.currentTarget.value);                                                             // 69\n    }                                                                                                                // 70\n});                                                                                                                  // 71\n                                                                                                                     // 72\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.selectGasPrice.js                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_selectGasPrice\");                                                                         // 2\nTemplate[\"dapp_selectGasPrice\"] = new Template(\"Template.dapp_selectGasPrice\", (function() {                         // 3\n  var view = this;                                                                                                   // 4\n  return HTML.DIV({                                                                                                  // 5\n    class: \"dapp-select-gas-price\"                                                                                   // 6\n  }, \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:fee\", function() {                                                   // 7\n    return Spacebars.mustache(view.lookup(\"fee\"));                                                                   // 8\n  }), \" \", HTML.SPAN(Blaze.View(\"lookup:unit\", function() {                                                          // 9\n    return Spacebars.mustache(view.lookup(\"unit\"));                                                                  // 10\n  }))), HTML.Raw(\"\\n        <br>\\n        \"), HTML.INPUT({                                                           // 11\n    type: \"range\",                                                                                                   // 12\n    name: \"fee\",                                                                                                     // 13\n    min: \"-4\",                                                                                                       // 14\n    max: \"1\",                                                                                                        // 15\n    step: \"1\",                                                                                                       // 16\n    value: function() {                                                                                              // 17\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"feeMultiplicator\");               // 18\n    }                                                                                                                // 19\n  }), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:i18nText\", function() {                                             // 20\n    return Spacebars.mustache(view.lookup(\"i18nText\"), \"low\");                                                       // 21\n  })), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:i18nText\", function() {                                            // 22\n    return Spacebars.mustache(view.lookup(\"i18nText\"), \"high\");                                                      // 23\n  })), \"\\n    \");                                                                                                    // 24\n}));                                                                                                                 // 25\n                                                                                                                     // 26\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/selectGasPrice.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Templates                                                                                                    // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n/**                                                                                                                  // 7\nThe select gas price template                                                                                        // 8\n                                                                                                                     // 9\n@class [template] dapp_selectGasPrice                                                                                // 10\n@constructor                                                                                                         // 11\n*/                                                                                                                   // 12\n                                                                                                                     // 13\n/**                                                                                                                  // 14\nThe the factor by which the gas price should be changeable.                                                          // 15\n                                                                                                                     // 16\n@property toPowerFactor                                                                                              // 17\n*/                                                                                                                   // 18\nvar toPowerFactor = 2;                                                                                               // 19\n                                                                                                                     // 20\n/**                                                                                                                  // 21\nCalculates the gas * gas price.                                                                                      // 22\n                                                                                                                     // 23\n@method calculateGasInWei                                                                                            // 24\n@return {Number}                                                                                                     // 25\n*/                                                                                                                   // 26\nvar calculateGasInWei = function(template, gas, gasPrice, returnGasPrice){                                           // 27\n    // Only defaults to 20 shannon if there's no default set                                                         // 28\n    gasPrice = gasPrice || 20000000000;                                                                              // 29\n                                                                                                                     // 30\n    if(!_.isObject(gasPrice))                                                                                        // 31\n        gasPrice = new BigNumber(String(gasPrice), 10);                                                              // 32\n                                                                                                                     // 33\n    if(_.isUndefined(gas)) {                                                                                         // 34\n        console.warn('No gas provided for {{> dapp_selectGasPrice}}');                                               // 35\n        return new BigNumber(0);                                                                                     // 36\n    }                                                                                                                // 37\n                                                                                                                     // 38\n    var feeMultiplicator = Number(TemplateVar.get(template, 'feeMultiplicator'));                                    // 39\n                                                                                                                     // 40\n    // divide and multiply to round it to the nearest billion wei (1 shannon)                                        // 41\n    var billion = new BigNumber(1000000000);                                                                         // 42\n    gasPrice = gasPrice.times(new BigNumber(toPowerFactor).toPower(feeMultiplicator)).dividedBy(billion).round().times(billion);\n                                                                                                                     // 44\n    return (returnGasPrice)                                                                                          // 45\n        ? gasPrice                                                                                                   // 46\n        : gasPrice.times(gas);                                                                                       // 47\n}                                                                                                                    // 48\n                                                                                                                     // 49\nTemplate['dapp_selectGasPrice'].onCreated(function(){                                                                // 50\n    TemplateVar.set('gasInWei', '0');                                                                                // 51\n    TemplateVar.set('gasPrice', '0');                                                                                // 52\n    TemplateVar.set('feeMultiplicator', 0);                                                                          // 53\n});                                                                                                                  // 54\n                                                                                                                     // 55\n                                                                                                                     // 56\nTemplate['dapp_selectGasPrice'].helpers({                                                                            // 57\n    /**                                                                                                              // 58\n    Return the currently selected fee value calculate with gas price                                                 // 59\n                                                                                                                     // 60\n    @method (fee)                                                                                                    // 61\n    */                                                                                                               // 62\n    'fee': function(){                                                                                               // 63\n        if(_.isFinite(TemplateVar.get('feeMultiplicator')) && _.isFinite(this.gas)) {                                // 64\n            var template = Template.instance();                                                                      // 65\n                                                                                                                     // 66\n            // set the value                                                                                         // 67\n            TemplateVar.set('gasInWei', calculateGasInWei(template, this.gas, this.gasPrice).floor().toString(10));  // 68\n            TemplateVar.set('gasPrice', calculateGasInWei(template, this.gas, this.gasPrice, true).floor().toString(10));\n                                                                                                                     // 70\n            // return the fee                                                                                        // 71\n            return EthTools.formatBalance(calculateGasInWei(template, this.gas, this.gasPrice).toString(10), '0,0.[000000000000000000]', this.unit);\n        }                                                                                                            // 73\n    },                                                                                                               // 74\n    /**                                                                                                              // 75\n    Return the current unit                                                                                          // 76\n                                                                                                                     // 77\n    @method (unit)                                                                                                   // 78\n    */                                                                                                               // 79\n    'unit': function(){                                                                                              // 80\n        var unit = this.unit || EthTools.getUnit();                                                                  // 81\n        if(unit)                                                                                                     // 82\n            return unit.toUpperCase();                                                                               // 83\n    },                                                                                                               // 84\n    /**                                                                                                              // 85\n    Get the correct text, if TAPi18n is available.                                                                   // 86\n                                                                                                                     // 87\n    @method i18nText                                                                                                 // 88\n    */                                                                                                               // 89\n    'i18nText': function(key){                                                                                       // 90\n        if(typeof TAPi18n !== 'undefined'                                                                            // 91\n            && TAPi18n.__('elements.selectGasPrice.'+ key) !== 'elements.selectGasPrice.'+ key) {                    // 92\n            return TAPi18n.__('elements.selectGasPrice.'+ key);                                                      // 93\n        } else if (typeof this[key] !== 'undefined') {                                                               // 94\n            return this[key];                                                                                        // 95\n        } else {                                                                                                     // 96\n            return (key === 'high') ? '+' : '-';                                                                     // 97\n        }                                                                                                            // 98\n    }                                                                                                                // 99\n});                                                                                                                  // 100\n                                                                                                                     // 101\nTemplate['dapp_selectGasPrice'].events({                                                                             // 102\n    /**                                                                                                              // 103\n    Change the selected fee                                                                                          // 104\n                                                                                                                     // 105\n    @event change input[name=\"fee\"], input input[name=\"fee\"]                                                         // 106\n    */                                                                                                               // 107\n    'change input[name=\"fee\"], input input[name=\"fee\"]': function(e){                                                // 108\n        TemplateVar.set('feeMultiplicator', Number(e.currentTarget.value));                                          // 109\n    },                                                                                                               // 110\n});                                                                                                                  // 111\n                                                                                                                     // 112\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.modal.js                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_modalPlaceholder\");                                                                       // 2\nTemplate[\"dapp_modalPlaceholder\"] = new Template(\"Template.dapp_modalPlaceholder\", (function() {                     // 3\n  var view = this;                                                                                                   // 4\n  return Blaze.If(function() {                                                                                       // 5\n    return Spacebars.call(view.lookup(\"modalTemplate\"));                                                             // 6\n  }, function() {                                                                                                    // 7\n    return [ \"\\n        \", Blaze._TemplateWith(function() {                                                          // 8\n      return {                                                                                                       // 9\n        template: Spacebars.call(view.lookup(\"modalTemplate\")),                                                      // 10\n        data: Spacebars.call(view.lookup(\"modalData\"))                                                               // 11\n      };                                                                                                             // 12\n    }, function() {                                                                                                  // 13\n      return Spacebars.include(function() {                                                                          // 14\n        return Spacebars.call(Template.__dynamic);                                                                   // 15\n      });                                                                                                            // 16\n    }), \"\\n    \" ];                                                                                                  // 17\n  });                                                                                                                // 18\n}));                                                                                                                 // 19\n                                                                                                                     // 20\nTemplate.__checkName(\"dapp_modal\");                                                                                  // 21\nTemplate[\"dapp_modal\"] = new Template(\"Template.dapp_modal\", (function() {                                           // 22\n  var view = this;                                                                                                   // 23\n  return Spacebars.include(view.lookupTemplate(\"Animate\"), function() {                                              // 24\n    return [ \"\\n        \", HTML.DIV({                                                                                // 25\n      class: \"dapp-modal-overlay animate\"                                                                            // 26\n    }, \"\\n            \", HTML.SECTION({                                                                              // 27\n      class: function() {                                                                                            // 28\n        return [ \"dapp-modal-container \", Spacebars.mustache(view.lookup(\"class\")) ];                                // 29\n      }                                                                                                              // 30\n    }, \"\\n                \", Blaze.If(function() {                                                                   // 31\n      return Spacebars.call(view.lookup(\"template\"));                                                                // 32\n    }, function() {                                                                                                  // 33\n      return [ \"\\n                    \", Blaze._TemplateWith(function() {                                            // 34\n        return {                                                                                                     // 35\n          template: Spacebars.call(view.lookup(\"template\")),                                                         // 36\n          data: Spacebars.call(view.lookup(\"data\"))                                                                  // 37\n        };                                                                                                           // 38\n      }, function() {                                                                                                // 39\n        return Spacebars.include(function() {                                                                        // 40\n          return Spacebars.call(Template.__dynamic);                                                                 // 41\n        });                                                                                                          // 42\n      }), \"\\n                \" ];                                                                                    // 43\n    }), \"\\n            \"), \"\\n        \"), \"\\n    \" ];                                                                // 44\n  });                                                                                                                // 45\n}));                                                                                                                 // 46\n                                                                                                                     // 47\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/modal.js                                                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Templates                                                                                                    // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n                                                                                                                     // 7\n/**                                                                                                                  // 8\nThe modal placeholder template.                                                                                      // 9\n                                                                                                                     // 10\n@class [template] dapp_modalPlaceholder                                                                              // 11\n@constructor                                                                                                         // 12\n*/                                                                                                                   // 13\n                                                                                                                     // 14\nTemplate['dapp_modalPlaceholder'].onCreated(function(){                                                              // 15\n});                                                                                                                  // 16\n                                                                                                                     // 17\n                                                                                                                     // 18\nTemplate['dapp_modalPlaceholder'].helpers({                                                                          // 19\n    /**                                                                                                              // 20\n    The modal template, set manualy                                                                                  // 21\n                                                                                                                     // 22\n    @method (modalTemplate)                                                                                          // 23\n    */                                                                                                               // 24\n    'modalTemplate': function(){                                                                                     // 25\n        return (EthElements.Modal._current.get())                                                                    // 26\n            ? 'dapp_modal' : false;                                                                                  // 27\n    },                                                                                                               // 28\n    /**                                                                                                              // 29\n    The modal templates data, set manualy                                                                            // 30\n                                                                                                                     // 31\n    @method (modalData)                                                                                              // 32\n    */                                                                                                               // 33\n    'modalData': function(){                                                                                         // 34\n        return EthElements.Modal._current.get();                                                                     // 35\n    }                                                                                                                // 36\n});                                                                                                                  // 37\n                                                                                                                     // 38\n                                                                                                                     // 39\n                                                                                                                     // 40\n/**                                                                                                                  // 41\nThe modal wrapper template.                                                                                          // 42\nIf you pass \"closePath\" in the data context, it will use this path, when the modal overlay is clicked.               // 43\n                                                                                                                     // 44\n                                                                                                                     // 45\n@class [template] dapp_modal                                                                                         // 46\n@constructor                                                                                                         // 47\n*/                                                                                                                   // 48\n                                                                                                                     // 49\n                                                                                                                     // 50\n/**                                                                                                                  // 51\nLook the scrolling of the body                                                                                       // 52\n                                                                                                                     // 53\n@method rendered                                                                                                     // 54\n*/                                                                                                                   // 55\nTemplate['dapp_modal'].onCreated(function(){                                                                         // 56\n    $('body').addClass('disable-scroll blur');                                                                       // 57\n});                                                                                                                  // 58\n                                                                                                                     // 59\n                                                                                                                     // 60\n/**                                                                                                                  // 61\nRemove look of scrolling from the body                                                                               // 62\n                                                                                                                     // 63\n@method rendered                                                                                                     // 64\n*/                                                                                                                   // 65\nTemplate['dapp_modal'].onDestroyed(function(){                                                                       // 66\n    $('body').removeClass('disable-scroll blur');                                                                    // 67\n});                                                                                                                  // 68\n                                                                                                                     // 69\n                                                                                                                     // 70\nTemplate['dapp_modal'].events({                                                                                      // 71\n    /**                                                                                                              // 72\n    Hide the modal on click. If the data context has the property \"closePath\",                                       // 73\n    it will route to this one instead of going back in the browser history.                                          // 74\n                                                                                                                     // 75\n    If the \"closeable\" is FALSE, it won't close the modal, when clicking the overlay.                                // 76\n                                                                                                                     // 77\n    @event click .dapp-modal-overlay                                                                                 // 78\n    */                                                                                                               // 79\n    'click .dapp-modal-overlay': function(e, template){                                                              // 80\n        // hide the modal                                                                                            // 81\n        if($(e.target).hasClass('dapp-modal-overlay') && template.data.closeable !== false) {                        // 82\n                                                                                                                     // 83\n            if(template.data.closePath && typeof Router !== 'undefined') {                                           // 84\n                if(typeof Router !== 'undefined')                                                                    // 85\n                    Router.go(template.data.closePath);                                                              // 86\n                if(typeof FlowRouter !== 'undefined')                                                                // 87\n                    FlowRouter.go(template.data.closePath);                                                          // 88\n            } else                                                                                                   // 89\n                EthElements.Modal.hide();                                                                            // 90\n        }                                                                                                            // 91\n    }                                                                                                                // 92\n});                                                                                                                  // 93\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.modalQuestion.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_modal_question\");                                                                         // 2\nTemplate[\"dapp_modal_question\"] = new Template(\"Template.dapp_modal_question\", (function() {                         // 3\n  var view = this;                                                                                                   // 4\n  return [ Blaze.If(function() {                                                                                     // 5\n    return Spacebars.call(view.lookup(\"template\"));                                                                  // 6\n  }, function() {                                                                                                    // 7\n    return [ \"\\n        \", Blaze._TemplateWith(function() {                                                          // 8\n      return {                                                                                                       // 9\n        template: Spacebars.call(view.lookup(\"template\")),                                                           // 10\n        data: Spacebars.call(view.lookup(\"data\"))                                                                    // 11\n      };                                                                                                             // 12\n    }, function() {                                                                                                  // 13\n      return Spacebars.include(function() {                                                                          // 14\n        return Spacebars.call(Template.__dynamic);                                                                   // 15\n      });                                                                                                            // 16\n    }), \"\\n    \" ];                                                                                                  // 17\n  }, function() {                                                                                                    // 18\n    return [ \"\\n        \", HTML.P(Blaze.View(\"lookup:text\", function() {                                             // 19\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));                                             // 20\n    })), \"\\n    \" ];                                                                                                 // 21\n  }), \"\\n    \", HTML.DIV({                                                                                           // 22\n    class: \"dapp-modal-buttons\"                                                                                      // 23\n  }, \"\\n        \", Blaze.If(function() {                                                                             // 24\n    return Spacebars.call(view.lookup(\"hasCancel\"));                                                                 // 25\n  }, function() {                                                                                                    // 26\n    return [ \"\\n            \", HTML.BUTTON({                                                                         // 27\n      class: \"cancel\"                                                                                                // 28\n    }, Blaze.View(\"lookup:cancelButtonText\", function() {                                                            // 29\n      return Spacebars.mustache(view.lookup(\"cancelButtonText\"));                                                    // 30\n    })), \"\\n        \" ];                                                                                             // 31\n  }), \"\\n        \", Blaze.If(function() {                                                                            // 32\n    return Spacebars.call(view.lookup(\"hasOk\"));                                                                     // 33\n  }, function() {                                                                                                    // 34\n    return [ \"\\n            \", HTML.BUTTON({                                                                         // 35\n      class: \"ok dapp-primary-button\"                                                                                // 36\n    }, Blaze.View(\"lookup:okButtonText\", function() {                                                                // 37\n      return Spacebars.mustache(view.lookup(\"okButtonText\"));                                                        // 38\n    })), \"\\n        \" ];                                                                                             // 39\n  }), \"\\n    \") ];                                                                                                   // 40\n}));                                                                                                                 // 41\n                                                                                                                     // 42\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/modalQuestion.js                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\nTemplate Controllers                                                                                                 // 2\n                                                                                                                     // 3\n@module Templates                                                                                                    // 4\n*/                                                                                                                   // 5\n                                                                                                                     // 6\n/**                                                                                                                  // 7\nThe modal question template. It can receive an ok and cancel function,                                               // 8\nwhich will be execited if the ok or cancel button is pressed.                                                        // 9\n                                                                                                                     // 10\nAfter any of the buttons is pressed the modal, will disappear.                                                       // 11\n                                                                                                                     // 12\nThe data context for this modal should look as follows:                                                              // 13\n                                                                                                                     // 14\n    {                                                                                                                // 15\n        text: 'Do you really want to do this?',                                                                      // 16\n        ok: function(){                                                                                              // 17\n            // do something on ok                                                                                    // 18\n        },                                                                                                           // 19\n        cancel: function(){                                                                                          // 20\n            // do something on cancel                                                                                // 21\n        }                                                                                                            // 22\n    }                                                                                                                // 23\n                                                                                                                     // 24\n@class [template] dapp_modal_question                                                                                // 25\n@constructor                                                                                                         // 26\n*/                                                                                                                   // 27\n                                                                                                                     // 28\nTemplate['dapp_modal_question'].helpers({                                                                            // 29\n    /**                                                                                                              // 30\n    Check if the `ok` property is present, without executing it yet.                                                 // 31\n                                                                                                                     // 32\n    @method (hasOk)                                                                                                  // 33\n    */                                                                                                               // 34\n    hasOk: function(){                                                                                               // 35\n        return (this.ok);                                                                                            // 36\n    },                                                                                                               // 37\n    /**                                                                                                              // 38\n    Check if the `cancel` property is present, without executing it yet.                                             // 39\n                                                                                                                     // 40\n    @method (hasCancel)                                                                                              // 41\n    */                                                                                                               // 42\n    hasCancel: function(){                                                                                           // 43\n        return (this.cancel);                                                                                        // 44\n    },                                                                                                               // 45\n                                                                                                                     // 46\n    /**                                                                                                              // 47\n    Returns text for OK button. Can be either an argument, a i18n default text or a default value.                   // 48\n                                                                                                                     // 49\n    @method (okButtonText)                                                                                           // 50\n    */                                                                                                               // 51\n    okButtonText: function(){                                                                                        // 52\n        return this.modalQuestionOkButtonText || TAPi18n.__('buttons.ok') || 'OK';                                   // 53\n    },                                                                                                               // 54\n                                                                                                                     // 55\n    /**                                                                                                              // 56\n    Returns text for Cancel button. Can be either an argument, a i18n default text or a default value.               // 57\n                                                                                                                     // 58\n    @method (cancelButtonText)                                                                                       // 59\n    */                                                                                                               // 60\n    cancelButtonText: function(){                                                                                    // 61\n        return this.modalQuestionCancelButtonText || TAPi18n.__('buttons.cancel') || 'Cancel';                       // 62\n    }                                                                                                                // 63\n});                                                                                                                  // 64\n                                                                                                                     // 65\n                                                                                                                     // 66\nTemplate['dapp_modal_question'].events({                                                                             // 67\n    /**                                                                                                              // 68\n    When the confirm button is clicked, execute the given ok() function.                                             // 69\n                                                                                                                     // 70\n    @event click .dapp-modal-buttons button.ok                                                                       // 71\n    */                                                                                                               // 72\n    'click .dapp-modal-buttons button.ok': function(e){                                                              // 73\n        // hide the modal                                                                                            // 74\n        EthElements.Modal.hide();                                                                                    // 75\n                                                                                                                     // 76\n        if(_.isFunction(this.ok)){                                                                                   // 77\n            this.ok();                                                                                               // 78\n        }                                                                                                            // 79\n                                                                                                                     // 80\n    },                                                                                                               // 81\n    /**                                                                                                              // 82\n    When the confirm button is clicked, execute the given cancel() function.                                         // 83\n                                                                                                                     // 84\n    @event click .dapp-modal-buttons button.cancel                                                                   // 85\n    */                                                                                                               // 86\n    'click .dapp-modal-buttons button.cancel': function(e){                                                          // 87\n        // hide the modal                                                                                            // 88\n        EthElements.Modal.hide();                                                                                    // 89\n                                                                                                                     // 90\n        if(_.isFunction(this.cancel))                                                                                // 91\n            this.cancel();                                                                                           // 92\n    }                                                                                                                // 93\n});                                                                                                                  // 94\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/template.output.js                                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\nTemplate.__checkName(\"dapp_output\");                                                                                 // 2\nTemplate[\"dapp_output\"] = new Template(\"Template.dapp_output\", (function() {                                         // 3\n  var view = this;                                                                                                   // 4\n  return HTML.DIV({                                                                                                  // 5\n    class: \"dapp-output\"                                                                                             // 6\n  }, \"\\n        \", HTML.DIV({                                                                                        // 7\n    class: \"value\"                                                                                                   // 8\n  }, \"\\n        \", Blaze.If(function() {                                                                             // 9\n    return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"output\"), \"type\"), \"address\");      // 10\n  }, function() {                                                                                                    // 11\n    return [ \"\\n            \", HTML.SPAN({                                                                           // 12\n      class: \"address\"                                                                                               // 13\n    }, \"\\n                \", Blaze._TemplateWith(function() {                                                        // 14\n      return {                                                                                                       // 15\n        identity: Spacebars.call(view.lookup(\"value\")),                                                              // 16\n        class: Spacebars.call(\"dapp-tiny\")                                                                           // 17\n      };                                                                                                             // 18\n    }, function() {                                                                                                  // 19\n      return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));                                               // 20\n    }), \"\\n                \", Blaze.View(\"lookup:value\", function() {                                                // 21\n      return Spacebars.mustache(view.lookup(\"value\"));                                                               // 22\n    }), \" \\n            \"), \"        \\n        \" ];                                                                  // 23\n  }, function() {                                                                                                    // 24\n    return [ \"\\n            \", HTML.STRONG(\" \", Blaze.View(\"lookup:value\", function() {                              // 25\n      return Spacebars.mustache(view.lookup(\"value\"));                                                               // 26\n    }), \" \"), \"\\n            \", HTML.EM(\" \", Blaze.View(\"lookup:extra\", function() {                                 // 27\n      return Spacebars.mustache(view.lookup(\"extra\"));                                                               // 28\n    }), \" \"), \"\\n\\n        \" ];                                                                                      // 29\n  }), \"\\n        \"), \"\\n        \\n        \", HTML.DIV({                                                              // 30\n    class: \"type\"                                                                                                    // 31\n  }, \"\\n            \", Blaze.View(\"lookup:type\", function() {                                                        // 32\n    return Spacebars.mustache(view.lookup(\"type\"));                                                                  // 33\n  }), \" \\n            \", Blaze.If(function() {                                                                       // 34\n    return Spacebars.call(view.lookup(\"bits\"));                                                                      // 35\n  }, function() {                                                                                                    // 36\n    return [ \"\\n                (\", Blaze.View(\"lookup:bits\", function() {                                           // 37\n      return Spacebars.mustache(view.lookup(\"bits\"));                                                                // 38\n    }), \" bits)\\n            \" ];                                                                                    // 39\n  }), \"\\n        \"), \"  \\n    \");                                                                                    // 40\n}));                                                                                                                 // 41\n                                                                                                                     // 42\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/ethereum_elements/output.js                                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n                                                                                                                     // 1\n                                                                                                                     // 2\n/**                                                                                                                  // 3\nThe contract constants template                                                                                      // 4\n                                                                                                                     // 5\n@class [template] dapp_output                                                                                        // 6\n@constructor                                                                                                         // 7\n*/                                                                                                                   // 8\n                                                                                                                     // 9\n/**                                                                                                                  // 10\nFormats the values for display                                                                                       // 11\n                                                                                                                     // 12\n@method formatOutput                                                                                                 // 13\n*/                                                                                                                   // 14\nvar formatOutput = function(val) {                                                                                   // 15\n    if(_.isArray(val))                                                                                               // 16\n        return _.map(val, formatOutput);                                                                             // 17\n    else {                                                                                                           // 18\n        var value = 0;                                                                                               // 19\n                                                                                                                     // 20\n        console.log('val?', val, typeof val, _.isBoolean(val));                                                      // 21\n        // stringify boolean                                                                                         // 22\n        if(_.isBoolean(val))                                                                                         // 23\n            value = val ? 'YES' : 'NO';                                                                              // 24\n                                                                                                                     // 25\n        // convert bignumber objects                                                                                 // 26\n        value = (_.isObject(val) && val.toString)                                                                    // 27\n            ? val.toString(10)                                                                                       // 28\n            : val;                                                                                                   // 29\n                                                                                                                     // 30\n        return value;                                                                                                // 31\n    }                                                                                                                // 32\n};                                                                                                                   // 33\n                                                                                                                     // 34\n                                                                                                                     // 35\nvar createTemplateDataFromInput = function (input){                                                                  // 36\n    input = _.clone(input);                                                                                          // 37\n                                                                                                                     // 38\n    input.typeShort = input.type.match(/[a-z]+/i);                                                                   // 39\n    input.typeShort = input.typeShort[0];                                                                            // 40\n    input.bits = input.type.replace(input.typeShort, '');                                                            // 41\n    input.displayName = input.name                                                                                   // 42\n        .replace(/([A-Z])/g, ' $1')                                                                                  // 43\n        .replace(/([\\-\\_])/g, '&thinsp;<span class=\"punctuation\">$1</span>&thinsp;');                                // 44\n                                                                                                                     // 45\n    if(input.type.indexOf('[') === -1 &&                                                                             // 46\n       (input.typeShort === 'string' ||                                                                              // 47\n        input.typeShort === 'uint' ||                                                                                // 48\n        input.typeShort == 'int' ||                                                                                  // 49\n        input.typeShort == 'address' ||                                                                              // 50\n        input.typeShort == 'bool' ||                                                                                 // 51\n        input.typeShort == 'bytes')) {                                                                               // 52\n                                                                                                                     // 53\n        input.template =  'elements_input_'+ input.typeShort;                                                        // 54\n    } else {                                                                                                         // 55\n        input.template =  'elements_input_json';                                                                     // 56\n    }                                                                                                                // 57\n                                                                                                                     // 58\n    return input;                                                                                                    // 59\n};                                                                                                                   // 60\n                                                                                                                     // 61\n                                                                                                                     // 62\nTemplate['dapp_output'].helpers({                                                                                    // 63\n    /**                                                                                                              // 64\n    Formats the value if its a big number or array                                                                   // 65\n                                                                                                                     // 66\n    @method (value)                                                                                                  // 67\n    */                                                                                                               // 68\n    'value': function() {                                                                                            // 69\n        var value = this.output.value;                                                                               // 70\n        var type = this.output.type;                                                                                 // 71\n                                                                                                                     // 72\n        if (type == \"bool\") {                                                                                        // 73\n            if (value==\"true\")                                                                                       // 74\n                return \"YES\"                                                                                         // 75\n            else                                                                                                     // 76\n                return \"NO\"                                                                                          // 77\n        } else if (type.indexOf(\"int\")>0) {                                                                          // 78\n            return value.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\")                                                  // 79\n        } else {                                                                                                     // 80\n            return value;                                                                                            // 81\n        }                                                                                                            // 82\n    },                                                                                                               // 83\n    /**                                                                                                              // 84\n    format the right bits                                                                                            // 85\n                                                                                                                     // 86\n    @method (value)                                                                                                  // 87\n    */                                                                                                               // 88\n    'bits': function() {                                                                                             // 89\n        var bits = this.output.type.match(/([0-9]+)/i);                                                              // 90\n        return bits ? bits[0] : null;                                                                                // 91\n    },                                                                                                               // 92\n    /**                                                                                                              // 93\n    format the right type                                                                                            // 94\n                                                                                                                     // 95\n    @method (value)                                                                                                  // 96\n    */                                                                                                               // 97\n    'type': function() {                                                                                             // 98\n        if(typeof TAPi18n === 'undefined') {                                                                         // 99\n            return this.output.type;                                                                                 // 100\n        } else {                                                                                                     // 101\n            var typeShort = this.output.type.match(/([a-z]+)/i);                                                     // 102\n            return TAPi18n.__('elements.type.'+ typeShort[0] );                                                      // 103\n        }                                                                                                            // 104\n    },                                                                                                               // 105\n    /**                                                                                                              // 106\n    Figures out extra data                                                                                           // 107\n                                                                                                                     // 108\n    @method (extra)                                                                                                  // 109\n    */                                                                                                               // 110\n    'extra': function() {                                                                                            // 111\n        // var data = formatOutput(this.output.value); // 1000000000                                                 // 112\n        var value = this.output.value;                                                                               // 113\n        var type = this.output.type;                                                                                 // 114\n                                                                                                                     // 115\n        if (type == \"bool\") {                                                                                        // 116\n           if (value == \"true\") {                                                                                    // 117\n                return new Spacebars.SafeString('<span class=\"icon icon-check\"></span>');                            // 118\n            } else {                                                                                                 // 119\n                return new Spacebars.SafeString('<span class=\"icon icon-ban\"></span>')                               // 120\n            }                                                                                                        // 121\n        } else if(type.indexOf(\"int\")>0) {                                                                           // 122\n            data = parseInt(value, 10);                                                                              // 123\n            if (data > 1400000000 && data < 1800000000 && Math.floor(data/1000) != data/1000) {                      // 124\n                return '(' + moment(data*1000).fromNow() + ')';                                                      // 125\n            }                                                                                                        // 126\n        } else if (type.indexOf(\"bytes\") > 0 ) {                                                                     // 127\n            var returnData = \"\";                                                                                     // 128\n            for(i = 0; i < value.length; i++) {                                                                      // 129\n                // console.log(\"returnData\", returnData);                                                            // 130\n                returnData += value.charAt(i);                                                                       // 131\n            }                                                                                                        // 132\n            return returnData;                                                                                       // 133\n        } else if (value == '') {                                                                                    // 134\n            return 'Value is empty';                                                                                 // 135\n        }                                                                                                            // 136\n                                                                                                                     // 137\n        // return;                                                                                                   // 138\n    }                                                                                                                // 139\n});                                                                                                                  // 140\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['ethereum:elements'] = {}, {\n  EthElements: EthElements\n});\n\n})();\n","servePath":"/packages/ethereum_elements.js"}]