[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                         //\n// packages/alexvandesande_identicon/vendor/blockies/blockies.js                           //\n//                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                           //\n(function() {                                                                              // 1\n\t// The random number is a js implementation of the Xorshift PRNG                          // 2\n\tvar randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values                      // 3\n                                                                                           // 4\n\tfunction seedrand(seed) {                                                                 // 5\n\t\tfor (var i = 0; i < randseed.length; i++) {                                              // 6\n\t\t\trandseed[i] = 0;                                                                        // 7\n\t\t}                                                                                        // 8\n\t\tfor (var i = 0; i < seed.length; i++) {                                                  // 9\n\t\t\trandseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);            // 10\n\t\t}                                                                                        // 11\n\t}                                                                                         // 12\n                                                                                           // 13\n\tfunction rand() {                                                                         // 14\n\t\t// based on Java's String.hashCode(), expanded to 4 32bit values                         // 15\n\t\tvar t = randseed[0] ^ (randseed[0] << 11);                                               // 16\n                                                                                           // 17\n\t\trandseed[0] = randseed[1];                                                               // 18\n\t\trandseed[1] = randseed[2];                                                               // 19\n\t\trandseed[2] = randseed[3];                                                               // 20\n\t\trandseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));                        // 21\n                                                                                           // 22\n\t\treturn (randseed[3]>>>0) / ((1 << 31)>>>0);                                              // 23\n\t}                                                                                         // 24\n                                                                                           // 25\n\tfunction createColor() {                                                                  // 26\n\t\t//saturation is the whole color spectrum                                                 // 27\n\t\tvar h = Math.floor(rand() * 360);                                                        // 28\n\t\t//saturation goes from 40 to 100, it avoids greyish colors                               // 29\n\t\tvar s = ((rand() * 60) + 40) + '%';                                                      // 30\n\t\t//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n\t\tvar l = ((rand()+rand()+rand()+rand()) * 25) + '%';                                      // 32\n                                                                                           // 33\n\t\tvar color = 'hsl(' + h + ',' + s + ',' + l + ')';                                        // 34\n\t\treturn color;                                                                            // 35\n\t}                                                                                         // 36\n                                                                                           // 37\n\tfunction createImageData(size) {                                                          // 38\n\t\tvar width = size; // Only support square icons for now                                   // 39\n\t\tvar height = size;                                                                       // 40\n                                                                                           // 41\n\t\tvar dataWidth = Math.ceil(width / 2);                                                    // 42\n\t\tvar mirrorWidth = width - dataWidth;                                                     // 43\n                                                                                           // 44\n\t\tvar data = [];                                                                           // 45\n\t\tfor(var y = 0; y < height; y++) {                                                        // 46\n\t\t\tvar row = [];                                                                           // 47\n\t\t\tfor(var x = 0; x < dataWidth; x++) {                                                    // 48\n\t\t\t\t// this makes foreground and background color to have a 43% (1/2.3) probability        // 49\n\t\t\t\t// spot color has 13% chance                                                           // 50\n\t\t\t\trow[x] = Math.floor(rand()*2.3);                                                       // 51\n\t\t\t}                                                                                       // 52\n\t\t\tvar r = row.slice(0, mirrorWidth);                                                      // 53\n\t\t\tr.reverse();                                                                            // 54\n\t\t\trow = row.concat(r);                                                                    // 55\n                                                                                           // 56\n\t\t\tfor(var i = 0; i < row.length; i++) {                                                   // 57\n\t\t\t\tdata.push(row[i]);                                                                     // 58\n\t\t\t}                                                                                       // 59\n\t\t}                                                                                        // 60\n                                                                                           // 61\n\t\treturn data;                                                                             // 62\n\t}                                                                                         // 63\n                                                                                           // 64\n\tfunction createCanvas(imageData, color, scale, bgcolor, spotcolor) {                      // 65\n\t\tvar c = document.createElement('canvas');                                                // 66\n\t\tvar width = Math.sqrt(imageData.length);                                                 // 67\n\t\tc.width = c.height = width * scale;                                                      // 68\n                                                                                           // 69\n\t\tvar cc = c.getContext('2d');                                                             // 70\n\t\tcc.fillStyle = bgcolor;                                                                  // 71\n\t\tcc.fillRect(0, 0, c.width, c.height);                                                    // 72\n\t\tcc.fillStyle = color;                                                                    // 73\n                                                                                           // 74\n\t\tfor(var i = 0; i < imageData.length; i++) {                                              // 75\n\t\t\tvar row = Math.floor(i / width);                                                        // 76\n\t\t\tvar col = i % width;                                                                    // 77\n\t\t\t// if data is 2, choose spot color, if 1 choose foreground                              // 78\n\t\t\tcc.fillStyle = (imageData[i] == 1) ? color : spotcolor;                                 // 79\n                                                                                           // 80\n\t\t\t// if data is 0, leave the background                                                   // 81\n\t\t\tif(imageData[i]) {                                                                      // 82\n\t\t\t\tcc.fillRect(col * scale, row * scale, scale, scale);                                   // 83\n\t\t\t}                                                                                       // 84\n\t\t}                                                                                        // 85\n                                                                                           // 86\n\t\treturn c;                                                                                // 87\n\t}                                                                                         // 88\n                                                                                           // 89\n\tfunction createIcon(opts) {                                                               // 90\n\t\topts = opts || {};                                                                       // 91\n\t\tvar size = opts.size || 8;                                                               // 92\n\t\tvar scale = opts.scale || 4;                                                             // 93\n\t\tvar seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);        // 94\n                                                                                           // 95\n\t\tseedrand(seed);                                                                          // 96\n                                                                                           // 97\n\t\tvar color = opts.color || createColor();                                                 // 98\n\t\tvar bgcolor = opts.bgcolor || createColor();                                             // 99\n\t\tvar spotcolor = opts.spotcolor || createColor();                                         // 100\n\t\tvar imageData = createImageData(size);                                                   // 101\n\t\tvar canvas = createCanvas(imageData, color, scale, bgcolor, spotcolor);                  // 102\n                                                                                           // 103\n\t\treturn canvas;                                                                           // 104\n\t}                                                                                         // 105\n                                                                                           // 106\n\twindow.blockies = {create: createIcon};                                                   // 107\n})();                                                                                      // 108\n                                                                                           // 109\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                         //\n// packages/alexvandesande_identicon/lib/identicon.js                                      //\n//                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                           //\n'use strict';                                                                              // 1\n                                                                                           // 2\nif (Package.templating) {                                                                  // 3\n  Package.templating.Template.registerHelper('identicon', function (seed, opt) {           // 4\n    opt = (opt && opt.hash) || {};                                                         // 5\n    if (seed) {                                                                            // 6\n      opt.seed = seed;                                                                     // 7\n    }                                                                                      // 8\n    return blockies.create(opt).toDataURL();                                               // 9\n  });                                                                                      // 10\n}                                                                                          // 11\n                                                                                           // 12\n/////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['alexvandesande:identicon'] = {};\n\n})();\n","servePath":"/packages/alexvandesande_identicon.js"}]