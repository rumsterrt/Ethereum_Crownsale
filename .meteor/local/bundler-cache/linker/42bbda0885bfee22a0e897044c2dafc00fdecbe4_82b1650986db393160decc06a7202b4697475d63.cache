[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Mongo = Package.mongo.Mongo;\nvar Web3 = Package['ethereum:web3'].Web3;\nvar BigNumber = Package['ethereum:web3'].BigNumber;\n\n/* Package-scope variables */\nvar EthBlocks;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/ethereum_blocks/blocks.js                                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n/**                                                                                                             // 1\n                                                                                                                // 2\n@module Ethereum:blocks                                                                                         // 3\n*/                                                                                                              // 4\n                                                                                                                // 5\n                                                                                                                // 6\n                                                                                                                // 7\n/**                                                                                                             // 8\nThe EthBlocks collection, with some ethereum additions.                                                         // 9\n                                                                                                                // 10\n@class EthBlocks                                                                                                // 11\n@constructor                                                                                                    // 12\n*/                                                                                                              // 13\n                                                                                                                // 14\n                                                                                                                // 15\n                                                                                                                // 16\nEthBlocks = new Mongo.Collection('ethereum_blocks', {connection: null});                                        // 17\n                                                                                                                // 18\n// if(typeof PersistentMinimongo !== 'undefined')                                                               // 19\n//     new PersistentMinimongo(EthBlocks);                                                                      // 20\n                                                                                                                // 21\n                                                                                                                // 22\n/**                                                                                                             // 23\nGives you reactively the lates block.                                                                           // 24\n                                                                                                                // 25\n@property latest                                                                                                // 26\n*/                                                                                                              // 27\nObject.defineProperty(EthBlocks, 'latest', {                                                                    // 28\n    get: function () {                                                                                          // 29\n        return EthBlocks.findOne({}, {sort: {number: -1}}) || {};                                               // 30\n    },                                                                                                          // 31\n    set: function (values) {                                                                                    // 32\n        var block = EthBlocks.findOne({}, {sort: {number: -1}}) || {};                                          // 33\n        values = values || {};                                                                                  // 34\n        EthBlocks.update(block._id, {$set: values});                                                            // 35\n    }                                                                                                           // 36\n});                                                                                                             // 37\n                                                                                                                // 38\n/**                                                                                                             // 39\nStores all the callbacks                                                                                        // 40\n                                                                                                                // 41\n@property _forkCallbacks                                                                                        // 42\n*/                                                                                                              // 43\nEthBlocks._forkCallbacks = [];                                                                                  // 44\n                                                                                                                // 45\n                                                                                                                // 46\n/**                                                                                                             // 47\nStart looking for new blocks                                                                                    // 48\n                                                                                                                // 49\n@method init                                                                                                    // 50\n*/                                                                                                              // 51\nEthBlocks.init = function(){                                                                                    // 52\n    if(typeof web3 === 'undefined') {                                                                           // 53\n        console.warn('EthBlocks couldn\\'t find web3, please make sure to instantiate a web3 object before calling EthBlocks.init()');\n        return;                                                                                                 // 55\n    }                                                                                                           // 56\n                                                                                                                // 57\n    // clear current block list                                                                                 // 58\n    EthBlocks.clear();                                                                                          // 59\n                                                                                                                // 60\n    Tracker.nonreactive(function() {                                                                            // 61\n        observeLatestBlocks();                                                                                  // 62\n    });                                                                                                         // 63\n};                                                                                                              // 64\n                                                                                                                // 65\n/**                                                                                                             // 66\nAdd callbacks to detect forks                                                                                   // 67\n                                                                                                                // 68\n@method detectFork                                                                                              // 69\n*/                                                                                                              // 70\nEthBlocks.detectFork = function(cb){                                                                            // 71\n    EthBlocks._forkCallbacks.push(cb);                                                                          // 72\n};                                                                                                              // 73\n                                                                                                                // 74\n/**                                                                                                             // 75\nClear all blocks                                                                                                // 76\n                                                                                                                // 77\n@method clear                                                                                                   // 78\n*/                                                                                                              // 79\nEthBlocks.clear = function(){                                                                                   // 80\n    _.each(EthBlocks.find({}).fetch(), function(block){                                                         // 81\n        EthBlocks.remove(block._id);                                                                            // 82\n    });                                                                                                         // 83\n};                                                                                                              // 84\n                                                                                                                // 85\n                                                                                                                // 86\n/**                                                                                                             // 87\nThe global block filter instance.                                                                               // 88\n                                                                                                                // 89\n@property filter                                                                                                // 90\n*/                                                                                                              // 91\nvar filter = null;                                                                                              // 92\n                                                                                                                // 93\n/**                                                                                                             // 94\nUpdate the block info and adds additional properties.                                                           // 95\n                                                                                                                // 96\n@method updateBlock                                                                                             // 97\n@param {Object} block                                                                                           // 98\n*/                                                                                                              // 99\nfunction updateBlock(block){                                                                                    // 100\n                                                                                                                // 101\n    // reset the chain, if the current blocknumber is 100 blocks less                                           // 102\n    if(block.number + 10 < EthBlocks.latest.number)                                                             // 103\n        EthBlocks.clear();                                                                                      // 104\n                                                                                                                // 105\n    block.difficulty = block.difficulty.toString(10);                                                           // 106\n    block.totalDifficulty = block.totalDifficulty.toString(10);                                                 // 107\n                                                                                                                // 108\n    web3.eth.getGasPrice(function(e, gasPrice){                                                                 // 109\n        if(!e) {                                                                                                // 110\n            block.gasPrice = gasPrice.toString(10);                                                             // 111\n            EthBlocks.upsert('bl_'+ block.hash.replace('0x','').substr(0,20), block);                           // 112\n        }                                                                                                       // 113\n    });                                                                                                         // 114\n};                                                                                                              // 115\n                                                                                                                // 116\n/**                                                                                                             // 117\nObserve the latest blocks and store them in the Blocks collection.                                              // 118\nAdditionally cap the collection to 50 blocks                                                                    // 119\n                                                                                                                // 120\n@method observeLatestBlocks                                                                                     // 121\n*/                                                                                                              // 122\nfunction observeLatestBlocks(){                                                                                 // 123\n                                                                                                                // 124\n    // get the latest block immediately                                                                         // 125\n    web3.eth.getBlock('latest', function(e, block){                                                             // 126\n        if(!e) {                                                                                                // 127\n            updateBlock(block);                                                                                 // 128\n        }                                                                                                       // 129\n    });                                                                                                         // 130\n                                                                                                                // 131\n    // GET the latest blockchain information                                                                    // 132\n    filter = web3.eth.filter('latest').watch(checkLatestBlocks);                                                // 133\n                                                                                                                // 134\n};                                                                                                              // 135\n                                                                                                                // 136\n/**                                                                                                             // 137\nThe observeLatestBlocks callback used in the block filter.                                                      // 138\n                                                                                                                // 139\n@method checkLatestBlocks                                                                                       // 140\n*/                                                                                                              // 141\nvar checkLatestBlocks = function(e, hash){                                                                      // 142\n    if(!e) {                                                                                                    // 143\n        web3.eth.getBlock(hash, function(e, block){                                                             // 144\n            if(!e) {                                                                                            // 145\n                var oldBlock = EthBlocks.latest;                                                                // 146\n                                                                                                                // 147\n                // console.log('BLOCK', block.number);                                                          // 148\n                                                                                                                // 149\n                // if(!oldBlock)                                                                                // 150\n                //     console.log('No previous block found: '+ --block.number);                                // 151\n                                                                                                                // 152\n                // CHECK for FORK                                                                               // 153\n                if(oldBlock && oldBlock.hash !== block.parentHash) {                                            // 154\n                    // console.log('FORK detected from Block #'+ oldBlock.number + ' -> #'+ block.number +'!');\n                                                                                                                // 156\n                    _.each(EthBlocks._forkCallbacks, function(cb){                                              // 157\n                        if(_.isFunction(cb))                                                                    // 158\n                            cb(oldBlock, block);                                                                // 159\n                    });                                                                                         // 160\n                }                                                                                               // 161\n                                                                                                                // 162\n                updateBlock(block);                                                                             // 163\n                                                                                                                // 164\n                // drop the 50th block                                                                          // 165\n                var blocks = EthBlocks.find({}, {sort: {number: -1}}).fetch();                                  // 166\n                if(blocks.length >= 5) {                                                                        // 167\n                    var count = 0;                                                                              // 168\n                    _.each(blocks, function(bl){                                                                // 169\n                        count++;                                                                                // 170\n                        if(count >= 5)                                                                          // 171\n                            EthBlocks.remove({_id: bl._id});                                                    // 172\n                    });                                                                                         // 173\n                }                                                                                               // 174\n            }                                                                                                   // 175\n        });                                                                                                     // 176\n                                                                                                                // 177\n    // try to re-create the filter on error                                                                     // 178\n    // TODO: want to do this?                                                                                   // 179\n    } else {                                                                                                    // 180\n        filter.stopWatching();                                                                                  // 181\n        filter = web3.eth.filter('latest').watch(checkLatestBlocks);                                            // 182\n    }                                                                                                           // 183\n};                                                                                                              // 184\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['ethereum:blocks'] = {}, {\n  EthBlocks: EthBlocks\n});\n\n})();\n","servePath":"/packages/ethereum_blocks.js"}]