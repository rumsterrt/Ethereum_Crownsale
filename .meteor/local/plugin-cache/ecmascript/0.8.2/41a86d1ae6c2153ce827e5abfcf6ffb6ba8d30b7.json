{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"../lib/web3","imported":["web3"],"specifiers":[{"kind":"named","imported":"web3","local":"web3"}]}],"exports":{"exported":["ContractFunc"],"specifiers":[{"kind":"local","local":"ContractFunc","exported":"default"}]}}},"options":{"filename":"imports/ui/ContractFunc.jsx","filenameRelative":"imports/ui/ContractFunc.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/ContractFunc.jsx.map","sourceFileName":"imports/ui/ContractFunc.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ContractFunc"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return ContractFunc;\n    }\n});\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.watch(require(\"react\"), {\n    \"default\": function (v) {\n        React = v;\n    },\n    Component: function (v) {\n        Component = v;\n    },\n    PropTypes: function (v) {\n        PropTypes = v;\n    }\n}, 0);\nvar createContainer = void 0;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    createContainer: function (v) {\n        createContainer = v;\n    }\n}, 1);\nvar web3 = void 0;\nmodule.watch(require(\"../lib/web3\"), {\n    web3: function (v) {\n        web3 = v;\n    }\n}, 2);\n\nvar ContractFunc = function (_Component) {\n    (0, _inherits3.default)(ContractFunc, _Component);\n\n    function ContractFunc() {\n        (0, _classCallCheck3.default)(this, ContractFunc);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this));\n\n        _this.state = {\n            results: new Array()\n        };\n        return _this;\n    }\n\n    ContractFunc.prototype.componentWillUnmount = function () {\n        function componentWillUnmount() {}\n\n        return componentWillUnmount;\n    }();\n\n    ContractFunc.prototype.componentWillUpdate = function () {\n        function componentWillUpdate() {}\n\n        return componentWillUpdate;\n    }();\n\n    ContractFunc.prototype.render = function () {\n        function render() {\n            return React.createElement(\n                \"div\",\n                {\n                    className: \"panel-contractfunction\"\n                },\n                React.createElement(\n                    \"div\",\n                    {\n                        style: {\n                            width: 100 + '%',\n                            position: 'relative'\n                        }\n                    },\n                    React.createElement(\n                        \"button\",\n                        {\n                            onClick: this.onClickFunction.bind(this),\n                            style: {\n                                width: 30 + '%',\n                                background: this.props.abielem.payable ? \"#ff0004\" : this.props.abielem.constant ? \"#a4f2ff\" : \"#ff928f\"\n                            }\n                        },\n                        this.props.abielem.name\n                    ),\n                    this.renderInput()\n                ),\n                React.createElement(\n                    \"div\",\n                    {\n                        className: \"contractRealization-body\"\n                    },\n                    this.renderResults()\n                )\n            );\n        }\n\n        return render;\n    }();\n\n    ContractFunc.prototype.renderInput = function () {\n        function renderInput() {\n            var inputs = this.props.abielem.inputs;\n            var isPayable = this.props.abielem.payable;\n            var isInputs = inputs.length != 0;\n\n            if (!isInputs && !isPayable) {\n                return;\n            }\n\n            var inputArray = new Array();\n\n            if (isInputs) {\n                var placeholder = '';\n                var texts = inputs.map(function (input) {\n                    return input.type + \" \" + input.name;\n                });\n\n                for (var elem in meteorBabelHelpers.sanitizeForInObject(texts)) {\n                    placeholder += texts[elem] + ',';\n                }\n\n                inputArray.push(React.createElement(\"input\", {\n                    className: \"form-control\",\n                    type: \"text\",\n                    ref: \"textInput\",\n                    placeholder: placeholder,\n                    style: {\n                        width: (isInputs && isPayable ? 30 : isInputs ? 60 : 0) + '%'\n                    }\n                }));\n            }\n\n            if (isPayable) {\n                inputArray.push(React.createElement(\"input\", {\n                    className: \"form-control\",\n                    type: \"number\",\n                    ref: \"textValue\",\n                    placeholder: \"value in ether\",\n                    style: {\n                        width: (isInputs && isPayable ? 30 : isPayable ? 60 : 0) + '%'\n                    }\n                }));\n            }\n\n            return inputArray;\n        }\n\n        return renderInput;\n    }();\n\n    ContractFunc.prototype.renderResults = function () {\n        function renderResults() {\n            var _this2 = this;\n\n            if (!this.state.results || this.state.results.length == 0) {\n                return;\n            }\n\n            return this.state.results.map(function (result) {\n                if (result instanceof Error) {\n                    return React.createElement(\n                        \"div\",\n                        null,\n                        result.name,\n                        React.createElement(\"hr\", null)\n                    );\n                } else {\n                    if (_this2.props.abielem.constant) {\n                        return React.createElement(\n                            \"div\",\n                            null,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"strong\",\n                                    null,\n                                    \"Value:\"\n                                ),\n                                result.value.toString()\n                            ),\n                            React.createElement(\"hr\", null)\n                        );\n                    } else {\n                        return React.createElement(\n                            \"div\",\n                            null,\n                            React.createElement(\n                                \"div\",\n                                null,\n                                React.createElement(\n                                    \"strong\",\n                                    null,\n                                    \"Result:\"\n                                ),\n                                React.createElement(\n                                    \"pre\",\n                                    null,\n                                    \"{\" + JSON.stringify(result.value).replace(/,|{|}/gi, '\\n') + \"}\"\n                                )\n                            ),\n                            React.createElement(\"hr\", null)\n                        );\n                    }\n                }\n            });\n        }\n\n        return renderResults;\n    }();\n\n    ContractFunc.prototype.onClickFunction = function () {\n        function onClickFunction() {\n            try {\n                var name = this.props.abielem.name;\n                var argArray = new Array();\n\n                if (this.refs.textInput) {\n                    argArray = this.refs.textInput.value.trim().split(',');\n                }\n\n                argArray.push({\n                    from: web3.eth.defaultAccount\n                });\n\n                if (this.props.abielem.payable) {\n                    argArray.push({\n                        value: (parseInt(this.refs.textValue.value) * 1000000000000000000).toString()\n                    });\n                }\n\n                var result = this.props.abielem.constant ? this.props.contractRealization[name].call.apply(null, argArray) : web3.eth.getTransactionReceipt(this.props.contractRealization[name].sendTransaction.apply(null, argArray));\n                var newResult = this.state.results;\n\n                if (!this.refs.textInput && this.props.abielem.constant) {\n                    newResult = new Array();\n                }\n\n                newResult.push({\n                    value: result\n                });\n                this.setState({\n                    results: newResult\n                });\n            } catch (err) {\n                var _newResult = this.state.results;\n\n                _newResult.push(err);\n\n                this.setState({\n                    results: _newResult\n                });\n            }\n        }\n\n        return onClickFunction;\n    }();\n\n    return ContractFunc;\n}(Component);\n\nContractFunc.propTypes = {\n    // This component gets the task to display through a React prop.\n    // We can use propTypes to indicate it is required\n    contractRealization: PropTypes.object.isRequired,\n    abielem: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["imports/ui/ContractFunc.jsx"],"names":["module","export","ContractFunc","React","Component","PropTypes","watch","require","v","createContainer","web3","state","results","Array","componentWillUnmount","componentWillUpdate","render","width","position","onClickFunction","bind","background","props","abielem","payable","constant","name","renderInput","renderResults","inputs","isPayable","isInputs","length","inputArray","placeholder","texts","map","input","type","elem","push","result","Error","value","toString","JSON","stringify","replace","argArray","refs","textInput","trim","split","from","eth","defaultAccount","parseInt","textValue","contractRealization","call","apply","getTransactionReceipt","sendTransaction","newResult","setState","err","propTypes","object","isRequired"],"mappings":"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","file":"imports/ui/ContractFunc.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport { createContainer } from 'meteor/react-meteor-data';\r\nimport { web3 } from '../lib/web3';\r\n\r\nexport default class ContractFunc extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            results: new Array(),\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    componentWillUpdate() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel-contractfunction\">\r\n                <div style={{width: 100+'%', position: 'relative'}}>\r\n                    <button onClick={this.onClickFunction.bind(this)} style={{width: 30+'%',background: this.props.abielem.payable?\"#ff0004\":this.props.abielem.constant?\"#a4f2ff\":\"#ff928f\"}}>\r\n                        {this.props.abielem.name}\r\n                    </button>\r\n                    {this.renderInput()}\r\n                </div>\r\n                <div className=\"contractRealization-body\">\r\n                    {this.renderResults()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderInput() {\r\n\r\n        let inputs = this.props.abielem.inputs;\r\n        let isPayable = this.props.abielem.payable;\r\n        let isInputs = inputs.length != 0;\r\n        if (!isInputs && !isPayable) {\r\n            return;\r\n        }\r\n        let inputArray = new Array();\r\n        if (isInputs) {\r\n            let placeholder = '';\r\n            let texts = inputs.map((input) => {\r\n                return input.type + \" \" + input.name;\r\n            });\r\n            for (let elem in texts) {\r\n                placeholder += texts[elem] + ',';\r\n            }\r\n            inputArray.push((<input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                ref=\"textInput\"\r\n                placeholder={placeholder}\r\n                style={{width: (isInputs && isPayable ? 30 : isInputs ? 60 : 0) + '%'}}\r\n            />))\r\n        }\r\n\r\n        if(isPayable) {\r\n            inputArray.push((\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    ref=\"textValue\"\r\n                    placeholder=\"value in ether\"\r\n                    style={{width: (isInputs && isPayable ? 30 : isPayable ? 60 : 0) + '%'}}\r\n                />));\r\n        }\r\n\r\n        return inputArray;\r\n    }\r\n\r\n    renderResults() {\r\n        if (!this.state.results || this.state.results.length == 0) {\r\n            return;\r\n        }\r\n        return this.state.results.map((result) => {\r\n                if (result instanceof Error) {\r\n                    return (\r\n                        <div>\r\n                            {result.name}\r\n                            <hr/>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    if (this.props.abielem.constant) {\r\n                        return (\r\n                            <div>\r\n                                <div>\r\n                                    <strong>Value:</strong>\r\n                                    {result.value.toString()}\r\n                                </div>\r\n                                <hr/>\r\n                            </div>);\r\n                    } else {\r\n                        return (\r\n                            <div>\r\n                                <div>\r\n                                    <strong>Result:</strong>\r\n                                    <pre>{\"{\" + JSON.stringify(result.value).replace(/,|{|}/gi, '\\n') + \"}\"}</pre>\r\n                                </div>\r\n                                <hr/>\r\n                            </div>);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    onClickFunction() {\r\n        try {\r\n            let name = this.props.abielem.name;\r\n            let argArray = new Array();\r\n            if (this.refs.textInput) {\r\n\r\n                argArray = this.refs.textInput.value.trim().split(',');\r\n            }\r\n\r\n            argArray.push({from: web3.eth.defaultAccount});\r\n            if(this.props.abielem.payable){\r\n                argArray.push({value: (parseInt(this.refs.textValue.value) * 1000000000000000000).toString()});\r\n            }\r\n            let result = this.props.abielem.constant?this.props.contractRealization[name].call.apply(null,argArray):web3.eth.getTransactionReceipt(this.props.contractRealization[name].sendTransaction.apply(null, argArray));\r\n            let newResult = this.state.results;\r\n            if(!this.refs.textInput&&this.props.abielem.constant){\r\n                newResult = new Array();\r\n            }\r\n            newResult.push({\r\n                value: result,\r\n            });\r\n            this.setState({\r\n                results: newResult,\r\n            })\r\n        }catch(err){\r\n            let newResult = this.state.results;\r\n            newResult.push(err);\r\n            this.setState({\r\n                results: newResult,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nContractFunc.propTypes = {\r\n    // This component gets the task to display through a React prop.\r\n    // We can use propTypes to indicate it is required\r\n    contractRealization: PropTypes.object.isRequired,\r\n    abielem:PropTypes.object.isRequired,\r\n};\r\n"]},"hash":"41a86d1ae6c2153ce827e5abfcf6ffb6ba8d30b7"}
