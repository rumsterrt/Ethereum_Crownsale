{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"../lib/web3","imported":["web3"],"specifiers":[{"kind":"named","imported":"web3","local":"web3"}]}],"exports":{"exported":["CrownsaleContract"],"specifiers":[{"kind":"local","local":"CrownsaleContract","exported":"default"}]}}},"options":{"filename":"imports/ui/CrownsaleContract.jsx","filenameRelative":"imports/ui/CrownsaleContract.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/CrownsaleContract.jsx.map","sourceFileName":"imports/ui/CrownsaleContract.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"CrownsaleContract"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return CrownsaleContract;\n    }\n});\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.watch(require(\"react\"), {\n    \"default\": function (v) {\n        React = v;\n    },\n    Component: function (v) {\n        Component = v;\n    },\n    PropTypes: function (v) {\n        PropTypes = v;\n    }\n}, 0);\nvar web3 = void 0;\nmodule.watch(require(\"../lib/web3\"), {\n    web3: function (v) {\n        web3 = v;\n    }\n}, 1);\n\nvar CrownsaleContract = function (_Component) {\n    (0, _inherits3.default)(CrownsaleContract, _Component);\n\n    function CrownsaleContract(props) {\n        (0, _classCallCheck3.default)(this, CrownsaleContract);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n        _this.isRendered = false;\n        var browser_untitled1_sol_crowdsaleContract = web3.eth.contract([{\n            \"constant\": false,\n            \"inputs\": [],\n            \"name\": \"finishMinting\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }, {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"owner\",\n            \"outputs\": [{\n                \"name\": \"\",\n                \"type\": \"address\"\n            }],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }, {\n            \"constant\": false,\n            \"inputs\": [],\n            \"name\": \"createTokens\",\n            \"outputs\": [],\n            \"payable\": true,\n            \"stateMutability\": \"payable\",\n            \"type\": \"function\"\n        }, {\n            \"constant\": false,\n            \"inputs\": [{\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }],\n            \"name\": \"transferOwnership\",\n            \"outputs\": [],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }, {\n            \"constant\": true,\n            \"inputs\": [],\n            \"name\": \"token\",\n            \"outputs\": [{\n                \"name\": \"\",\n                \"type\": \"address\"\n            }],\n            \"payable\": false,\n            \"stateMutability\": \"view\",\n            \"type\": \"function\"\n        }, {\n            \"inputs\": [{\n                \"name\": \"multisig\",\n                \"type\": \"address\"\n            }, {\n                \"name\": \"restricted\",\n                \"type\": \"address\"\n            }, {\n                \"name\": \"restrictedPercent\",\n                \"type\": \"uint256\"\n            }, {\n                \"name\": \"rate\",\n                \"type\": \"uint256\"\n            }, {\n                \"name\": \"start\",\n                \"type\": \"uint256\"\n            }, {\n                \"name\": \"period\",\n                \"type\": \"uint256\"\n            }, {\n                \"name\": \"hardcap\",\n                \"type\": \"uint256\"\n            }],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"constructor\"\n        }, {\n            \"payable\": true,\n            \"stateMutability\": \"payable\",\n            \"type\": \"fallback\"\n        }]);\n        _this.contract = browser_untitled1_sol_crowdsaleContract.at(_this.props.contractAddress);\n        return _this;\n    }\n\n    CrownsaleContract.prototype.componentDidMount = function () {\n        function componentDidMount() {\n            this.isRendered = true;\n        }\n\n        return componentDidMount;\n    }();\n\n    CrownsaleContract.prototype.render = function () {\n        function render() {\n            return React.createElement(\n                \"section\",\n                {\n                    className: \"container\"\n                },\n                React.createElement(\n                    \"div\",\n                    {\n                        className: \"login\"\n                    },\n                    React.createElement(\n                        \"h1\",\n                        null,\n                        \"Choose account for work and enter password\"\n                    ),\n                    React.createElement(\n                        \"p\",\n                        null,\n                        this.renderAccountSelector()\n                    ),\n                    React.createElement(\n                        \"p\",\n                        null,\n                        React.createElement(\"input\", {\n                            type: \"password\",\n                            ref: \"password\",\n                            placeholder: \"Password\"\n                        })\n                    ),\n                    React.createElement(\n                        \"p\",\n                        {\n                            className: \"submit\"\n                        },\n                        React.createElement(\n                            \"button\",\n                            {\n                                type: \"button\",\n                                onClick: this.handleEnter.bind(this)\n                            },\n                            \"Enter\"\n                        )\n                    )\n                )\n            );\n        }\n\n        return render;\n    }();\n\n    CrownsaleContract.prototype.renderAccountSelector = function () {\n        function renderAccountSelector() {\n            var transSelector = web3.eth.accounts.map(function (trans) {\n                return React.createElement(\n                    \"option\",\n                    {\n                        value: trans\n                    },\n                    trans\n                );\n            });\n            return React.createElement(\n                \"select\",\n                {\n                    type: \"accountOption\",\n                    ref: \"accountSelector\"\n                },\n                transSelector\n            );\n        }\n\n        return renderAccountSelector;\n    }();\n\n    CrownsaleContract.prototype.handleEnter = function () {\n        function handleEnter() {\n            var result = web3.personal.unlockAccount(this.refs.accountSelector.value, this.refs.password.value);\n            console.log(this.refs.password.value + result);\n        }\n\n        return handleEnter;\n    }();\n\n    return CrownsaleContract;\n}(Component);\n\nCrownsaleContract.propTypes = {\n    contractAddress: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["imports/ui/CrownsaleContract.jsx"],"names":["module","export","CrownsaleContract","React","Component","PropTypes","watch","require","v","web3","props","isRendered","browser_untitled1_sol_crowdsaleContract","eth","contract","at","contractAddress","componentDidMount","render","renderAccountSelector","handleEnter","bind","transSelector","accounts","map","trans","result","personal","unlockAccount","refs","accountSelector","value","password","console","log","propTypes","string","isRequired"],"mappings":"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","file":"imports/ui/CrownsaleContract.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport { web3 } from '../lib/web3';\r\n\r\nexport default class CrownsaleContract extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.isRendered = false;\r\n\r\n        let browser_untitled1_sol_crowdsaleContract = web3.eth.contract([{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"multisig\",\"type\":\"address\"},{\"name\":\"restricted\",\"type\":\"address\"},{\"name\":\"restrictedPercent\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"start\",\"type\":\"uint256\"},{\"name\":\"period\",\"type\":\"uint256\"},{\"name\":\"hardcap\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]);\r\n        this.contract = browser_untitled1_sol_crowdsaleContract.at(this.props.contractAddress);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.isRendered = true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"container\">\r\n                <div className=\"login\">\r\n                    <h1>Choose account for work and enter password</h1>\r\n                    <p>{this.renderAccountSelector()}</p>\r\n                    <p><input type=\"password\" ref=\"password\" placeholder=\"Password\"/></p>\r\n                    <p className=\"submit\">\r\n                        <button type=\"button\" onClick={this.handleEnter.bind(this)}>Enter</button>\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n\r\n    renderAccountSelector() {\r\n        let transSelector = web3.eth.accounts.map((trans) => (\r\n            <option value={trans}>{trans}</option>\r\n        ));\r\n        return (\r\n            <select type=\"accountOption\" ref=\"accountSelector\">\r\n                {transSelector}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    handleEnter(){\r\n        let result = web3.personal.unlockAccount(this.refs.accountSelector.value, this.refs.password.value);\r\n        console.log(this.refs.password.value + result);\r\n    }\r\n}\r\n\r\nCrownsaleContract.propTypes = {\r\n    contractAddress:PropTypes.string.isRequired,\r\n};"]},"hash":"8cc4396f186bd64f13b85b1e9895d2c0d5f8bea1"}
