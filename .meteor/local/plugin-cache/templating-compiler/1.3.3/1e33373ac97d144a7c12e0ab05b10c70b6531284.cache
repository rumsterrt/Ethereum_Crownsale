{"head":"","body":"","js":"\nTemplate.__checkName(\"dapp_output\");\nTemplate[\"dapp_output\"] = new Template(\"Template.dapp_output\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"dapp-output\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"value\"\n  }, \"\\n        \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"$eq\"), Spacebars.dot(view.lookup(\"output\"), \"type\"), \"address\");\n  }, function() {\n    return [ \"\\n            \", HTML.SPAN({\n      class: \"address\"\n    }, \"\\n                \", Blaze._TemplateWith(function() {\n      return {\n        identity: Spacebars.call(view.lookup(\"value\")),\n        class: Spacebars.call(\"dapp-tiny\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));\n    }), \"\\n                \", Blaze.View(\"lookup:value\", function() {\n      return Spacebars.mustache(view.lookup(\"value\"));\n    }), \" \\n            \"), \"        \\n        \" ];\n  }, function() {\n    return [ \"\\n            \", HTML.STRONG(\" \", Blaze.View(\"lookup:value\", function() {\n      return Spacebars.mustache(view.lookup(\"value\"));\n    }), \" \"), \"\\n            \", HTML.EM(\" \", Blaze.View(\"lookup:extra\", function() {\n      return Spacebars.mustache(view.lookup(\"extra\"));\n    }), \" \"), \"\\n\\n        \" ];\n  }), \"\\n        \"), \"\\n        \\n        \", HTML.DIV({\n    class: \"type\"\n  }, \"\\n            \", Blaze.View(\"lookup:type\", function() {\n    return Spacebars.mustache(view.lookup(\"type\"));\n  }), \" \\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"bits\"));\n  }, function() {\n    return [ \"\\n                (\", Blaze.View(\"lookup:bits\", function() {\n      return Spacebars.mustache(view.lookup(\"bits\"));\n    }), \" bits)\\n            \" ];\n  }), \"\\n        \"), \"  \\n    \");\n}));\n","bodyAttrs":{}}