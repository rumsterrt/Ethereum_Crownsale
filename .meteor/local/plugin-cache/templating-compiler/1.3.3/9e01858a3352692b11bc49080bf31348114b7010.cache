{"head":"","body":"","js":"\nTemplate.__checkName(\"dapp_selectAccount\");\nTemplate[\"dapp_selectAccount\"] = new Template(\"Template.dapp_selectAccount\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: function() {\n      return [ \"dapp-select-account \", Spacebars.mustache(view.lookup(\"class\")) ];\n    }\n  }, \"\\n        \", HTML.SELECT({\n    name: function() {\n      return Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"name\"));\n      }, function() {\n        return Blaze.View(\"lookup:name\", function() {\n          return Spacebars.mustache(view.lookup(\"name\"));\n        });\n      }, function() {\n        return \"dapp-select-account\";\n      });\n    },\n    class: function() {\n      return Spacebars.mustache(view.lookup(\"class\"));\n    }\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"accounts\"));\n  }, function() {\n    return [ \"\\n                \", HTML.OPTION(HTML.Attrs({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"address\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"selected\"));\n    }), \"\\n                    \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isAccount\"));\n    }, function() {\n      return \"ðŸ”‘\";\n    }), \" \", Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \"\\n                    \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"balance\"));\n    }, function() {\n      return [ \"\\n                        - \", Blaze.View(\"lookup:dapp_formatBalance\", function() {\n        return Spacebars.mustache(view.lookup(\"dapp_formatBalance\"), view.lookup(\"balance\"), \"0,0.00 UNIT\");\n      }), \"\\n                        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isNotEtherUnit\"));\n      }, function() {\n        return [ \"\\n                            (\", Blaze.View(\"lookup:dapp_formatBalance\", function() {\n          return Spacebars.mustache(view.lookup(\"dapp_formatBalance\"), view.lookup(\"balance\"), \"0,0.00 UNIT\", \"ether\");\n        }), \")\\n                        \" ];\n      }), \"\\n                    \" ];\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isAddress\"));\n  }, function() {\n    return [ \"\\n        \", Blaze._TemplateWith(function() {\n      return {\n        identity: Spacebars.call(Spacebars.dataMustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"value\")),\n        class: Spacebars.call(\"dapp-small\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"dapp_identicon\"));\n    }), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.I({\n      class: function() {\n        return [ \"no-identicon icon-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"TemplateVar\"), \"get\"), \"value\") ];\n      }\n    }), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n","bodyAttrs":{}}